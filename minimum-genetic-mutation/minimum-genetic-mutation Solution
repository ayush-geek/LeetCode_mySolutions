class   Solution   { 
 public : 
      int   minMutation ( string startGene ,  string endGene ,  vector < string > &  bank )   { 
         
          //bfs 
 
          int  ans = 0 ; 
 
          if ( startGene == endGene ) 
              return   0 ; 
         unordered_set < string >   st ( bank . begin ( ) , bank . end ( ) ) ; 
         queue < string >  q ; 
         q . push ( startGene ) ; 
         
          while ( ! q . empty ( ) ) 
          { 
              int  sz = q . size ( ) ; 
            
              while ( sz -- ) 
              { 
                 string tp = q . front ( ) ; 
                 q . pop ( ) ; 
                  if ( tp == endGene ) 
                      return  ans ; 
 
                  for ( int  i = 0 ; i < tp . size ( ) ; i ++ ) 
                  { 
                      char  tmp = tp [ i ] ; 
 
                     tp [ i ] = 'A' ; 
                      if ( st . find ( tp ) != st . end ( ) ) { 
                         q . push ( tp ) ; 
                         st . erase ( tp ) ; 
                      } 
 
                      tp [ i ] = 'C' ; 
                      if ( st . find ( tp ) != st . end ( ) ) { 
                         q . push ( tp ) ; 
                         st . erase ( tp ) ;     
                      } 
                      tp [ i ] = 'G' ; 
                      if ( st . find ( tp ) != st . end ( ) ) { 
                         q . push ( tp ) ; 
                      st . erase ( tp ) ;  
                      } 
 
                      tp [ i ] = 'T' ; 
                      if ( st . find ( tp ) != st . end ( ) ) { 
                         q . push ( tp ) ; 
                         st . erase ( tp ) ;  
                      } 
                     tp [ i ] = tmp ; 
                     
                  } 
              } 
              ans ++ ; 
          } 
          return   - 1 ; 
      } 
 } ;