class   Solution   { 
  public : 
 
      bool   same ( vector < int > &  a  , vector < int > &  b ) 
      { 
         int  count1  =   0 ; 
          int  count2  =   0 ; 
          for   ( int  i  =   0 ;  i  <   26 ;  i ++ )   { 
              if   ( a [ i ]   >   0 )  count1 ++ ; 
              if   ( b [ i ]   >   0 )  count2 ++ ; 
          } 
         
          return  count1  ==  count2 ; 
      } 
 
      bool   isItPossible ( string word1 ,  string word2 )   { 
         
         vector < int >   mp1 ( 26 , 0 ) ; 
         vector < int >   mp2 ( 26 , 0 ) ; 
 
         for ( int  i = 0 ; i < word1 . size ( ) ; i ++ ) 
         { 
            mp1 [ word1 [ i ] - 'a' ] ++ ; 
         } 
         
          for ( int  i = 0 ; i < word2 . size ( ) ; i ++ ) 
         { 
            mp2 [ word2 [ i ] - 'a' ] ++ ; 
         } 
         
       cout << mp1 . size ( ) << " " << mp2 . size ( ) << endl ; 
 
 
        for ( int  i = 0 ; i < 26 ; i ++ ) 
        { 
            if ( mp1 [ i ] == 0 ) 
              continue ; 
              cout << "u" <<  mp1 . size ( ) << " " << mp2 . size ( ) << endl ; 
            for ( int  j = 0 ; j < 26 ; j ++ ) 
            {  
 
                cout << "i" << i << " " << j <<  mp1 . size ( ) << " " << mp2 . size ( ) << endl ; 
                if ( mp2 [ j ] == 0 ) 
                  continue ; 
              else { 
                  cout << i << " " << j << endl ; 
             //cout<<mp1[i]<<" "<<mp2[j]<<"\t"; 
                 mp1 [ i ] -- ; 
                mp2 [ j ] -- ; 
                mp1 [ j ] ++ ; 
                
                mp2 [ i ] ++ ; 
                 
       
            
            //  cout<<mp1.size()<<" "<<mp2.size()<<endl; 
             
                 if ( same ( mp1 , mp2 ) ) 
                      return   true ; 
                
                 mp1 [ j ] -- ; 
                mp1 [ i ] ++ ; 
                mp2 [ i ] -- ; 
                mp2 [ j ] ++ ; 
 
 
        
 
                
              cout << "s " << mp1 . size ( ) << " " << mp2 . size ( ) << endl ; 
           
            } 
            } 
        } 
     
         
          return   false ; 
      } 
  } ;