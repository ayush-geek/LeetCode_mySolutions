class   Solution   { 
 public : 
      int  ct = 0 ; 
   
      void   solve ( int  i , vector < int > &  nums , int  k , unordered_map < int , int > &  st ) 
      {     //cout<<i<<" "<<st.size()<<endl; 
          if ( i >= nums . size ( ) ) 
          { 
            
             ct ++ ; 
              return   ; 
          } 
         
         
     
          { 
              if ( st [ nums [ i ] - k ] == 0   ) 
              { 
                st [ nums [ i ] ] ++ ; 
                  solve ( i + 1 , nums , k , st ) ; 
                 st [ nums [ i ] ] -- ; 
              } 
              solve ( i + 1 , nums , k , st ) ; 
             
          } 
      } 
     
      int   beautifulSubsets ( vector < int > &  nums ,   int  k )   { 
         
         
        
          sort ( nums . begin ( ) , nums . end ( ) ) ; 
          int  n = nums . size ( ) ; 
        
        
             unordered_map < int , int >  st ; 
       
             
             solve ( 0 , nums , k , st ) ; 
        
             
         
          return  ct - 1 ; 
         
     
      } 
 } ; 
 
 /*
 [1]
 1
 [10,4,5,7,2,1]
 3
 */