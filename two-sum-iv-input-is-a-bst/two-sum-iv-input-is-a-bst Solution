/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
      void   dfs ( TreeNode *  rt , vector < int > &  res ) 
      { 
          if ( rt == NULL ) 
              return   ; 
          dfs ( rt -> left , res ) ; 
         res . push_back ( rt -> val ) ; 
          dfs ( rt -> right , res ) ; 
      } 
 
      bool   findTarget ( TreeNode *  root ,   int  k )   { 
         
 
         vector < int >  res ; 
 
          dfs ( root , res ) ; 
 
 
          int  i = 0 ; 
          int  j = res . size ( ) - 1 ; 
 
          while ( i < j ) 
          { 
              if ( res [ i ] + res [ j ] == k ) 
                  return   true ; 
              else   if ( res [ i ] + res [ j ] < k ) 
                 i ++ ; 
              else 
                 j -- ; 
          } 
 
          return   false   ; 
      } 
 } ;