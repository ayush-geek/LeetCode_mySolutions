/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
      void   solve ( TreeNode *  rt , vector < int > &  in ) 
      { 
 
          if ( rt == NULL ) 
              return   ; 
          solve ( rt -> left , in ) ; 
         in . push_back ( rt -> val ) ; 
          solve ( rt -> right , in ) ; 
 
      } 
 
      bool   findTarget ( TreeNode *  root ,   int  k )   { 
         
         vector < int >  in ; 
          solve ( root , in ) ; 
 
 
         unordered_map < int , int >  mp ; 
 
          for ( int  i = 0 ; i < in . size ( ) ; i ++ ) 
          { 
              if ( mp . find ( k - in [ i ] ) != mp . end ( ) ) 
                  return   true ; 
             mp [ in [ i ] ] ++ ; 
          } 
          return   false ; 
      } 
 } ;