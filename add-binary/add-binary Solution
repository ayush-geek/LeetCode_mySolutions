class   Solution   { 
 public : 
     string  addBinary ( string a ,  string b )   { 
         
          reverse ( a . begin ( ) , a . end ( ) ) ; 
          reverse ( b . begin ( ) , b . end ( ) ) ; 
 
          int  n = a . size ( ) ; 
          int  m = b . size ( ) ; 
          int  i = 0 ; 
          int  j = 0 ; 
          int  carry = 0 ; 
          while ( i < n  &&  j < m ) 
          { 
              int  num = ( a [ i ] - '0' )   + ( b [ j ] - '0' ) + carry ; 
           
             carry = num / 2 ; 
             num %= 2 ; 
             a [ i ] =   char ( num + '0' ) ; 
             i ++ ; 
             j ++ ; 
          } 
 
          while ( j < m ) 
          { 
               int  num = ( b [ j ] - '0' ) + carry ; 
             
             carry = num / 2 ; 
             num %= 2 ; 
             a . push_back ( char ( num + '0' ) ) ; 
            j ++ ; 
          } 
 
          while ( i < n ) 
          { 
               int  num = ( a [ i ] - '0' ) + carry ; 
             
             carry = num / 2 ; 
             num %= 2 ; 
             a [ i ] = ( char ( num + '0' ) ) ; 
            i ++ ; 
          } 
 
          if ( carry == 1 ) 
              a . push_back ( '1' ) ; 
 
              reverse ( a . begin ( ) , a . end ( ) ) ; 
              return  a ; 
      } 
 } ;