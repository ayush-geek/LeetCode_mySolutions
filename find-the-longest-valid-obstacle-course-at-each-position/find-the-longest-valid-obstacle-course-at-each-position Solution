class   Solution   { 
 public : 
     vector < int >   longestObstacleCourseAtEachPosition ( vector < int > &  obstacles )   { 
 
          //nlogn 
          //bs 
         vector < int >  tmp ; 
 
         vector < int >  res ; 
          for ( int  i = 0 ; i < obstacles . size ( ) ; i ++ ) 
          { 
              if ( tmp . empty ( )   ||  obstacles [ i ] >= tmp . back ( ) ) { 
                 tmp . push_back ( obstacles [ i ] ) ; 
                 
                 res . push_back ( tmp . size ( ) ) ; 
                  } 
 
              else 
              { 
                  int  lb = upper_bound ( tmp . begin ( ) , tmp . end ( ) , obstacles [ i ] ) - tmp . begin ( ) ; 
                 tmp [ lb ] = obstacles [ i ] ; 
                 res . push_back ( lb + 1 ) ; 
              } 
 
             
          } 
          return  res ; 
         
      } 
 } ;