class   Solution   { 
 public : 
 
      bool   ispal ( int  i , int  j ,  string &  s ) 
      { 
          while ( i < j ) 
          { 
              if ( s [ i ] != s [ j ] ) 
                  return   false ; 
             i ++ ; 
             j -- ; 
          } 
          return   true ; 
      } 
 
      int   solve ( int  i , string &  s , vector < int > &  dp ) 
      { 
 
          if ( i == s . size ( ) ) 
              return   0 ; 
          if ( dp [ i ] != - 1 ) 
              return  dp [ i ] ; 
 
 
          int  mn = INT_MAX ; 
          for ( int  j = i ; j < s . size ( ) ; j ++ ) 
          {    
             
              if ( ispal ( i , j , s ) ) 
              { 
                  int  x = 1 + solve ( j + 1 , s , dp ) ; 
                 mn = min ( mn , x ) ; 
              } 
          } 
 
          return  dp [ i ] = mn ; 
      } 
      int   minCut ( string s )   { 
         
 
          int  n = s . size ( ) ; 
 
         vector < int >   dp ( n + 1 , - 1 ) ; 
 
          return   solve ( 0 , s , dp ) - 1 ; 
      } 
 } ;