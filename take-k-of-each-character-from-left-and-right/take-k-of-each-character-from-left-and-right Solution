class   Solution   { 
 public : 
      int   takeCharacters ( string s ,   int  k )   { 
         
         map < char , int >  mp ; 
 
          for ( auto & ele :  s ) 
          { 
             mp [ ele ] ++ ; 
          } 
 
          if ( mp [ 'a' ] < k  ||  mp [ 'b' ] < k ||  mp [ 'c' ] < k ) 
              return   - 1 ; 
 
          int  z1 = mp [ 'a' ] - k ; 
          int  z2 = mp [ 'b' ] - k ; 
          int  z3 = mp [ 'c' ] - k ; 
 
          //find max substring with at most z1,z2,z3;  
      int  j = 0 ; 
      int  ca = 0 ; 
      int  cb = 0 ; 
      int  cc = 0 ; 
      int  ans = 0 ; 
          for ( int  i = 0 ; i < s . size ( ) ; i ++ ) 
          {    
              if ( s [ i ] == 'a' ) 
                 ca ++ ; 
              if ( s [ i ] == 'b' ) 
                 cb ++ ; 
              if ( s [ i ] == 'c' ) 
                 cc ++ ; 
 
              while ( ca > z1  ||  cb > z2 ||  cc > z3 ) 
              { 
                  if ( s [ j ] == 'a' ) 
                     ca -- ; 
                  else   if ( s [ j ] == 'b' ) 
                     cb -- ; 
                  else 
                     cc -- ; 
                 j ++ ; 
              } 
             ans = max ( ans , i - j + 1 ) ; 
          } 
          return  s . size ( ) - ans ; 
      } 
 } ;