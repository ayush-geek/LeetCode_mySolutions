class   Solution   { 
 public : 
      int   maxProfit ( vector < int > &  prices )   { 
         
          //index,b/s 
 
          /*
 
             if(i>=n)
                 return 0;
             if(state==0) //buy
                 ans=max(-1*prices[i] + solve(i+1,1) ,solve(i+1,0));
             else
                 ans=max(prices[i]solve(i+1,0)  , solve(i+1,1)); 
         */ 
 
          int  n = prices . size ( ) ; 
 
         vector < vector < int >>   dp ( n + 1 , vector < int >   ( 2 , 0 ) ) ; 
 
 
          for ( int  i = n - 1 ; i >= 0 ; i -- ) 
          { 
             dp [ i ] [ 0 ] = max ( - prices [ i ] + dp [ i + 1 ] [ 1 ] , dp [ i + 1 ] [ 0 ] ) ; 
             dp [ i ] [ 1 ] = max ( prices [ i ] + dp [ i + 1 ] [ 0 ] , dp [ i + 1 ] [ 1 ] ) ; 
          } 
          return  dp [ 0 ] [ 0 ] ; 
      } 
 } ;