class   Solution   { 
 public : 
      int   carFleet ( int  target ,  vector < int > &  position ,  vector < int > &  speed )   { 
 
       int  n = position . size ( ) ; 
      vector < pair < int , int >>  res ; 
     stack < float >  st ; 
 
       for ( int  i = 0 ; i < n ; i ++ ) 
       { 
          res . push_back ( { position [ i ] , speed [ i ] } ) ; 
       } 
 
       sort ( res . begin ( ) , res . end ( ) ) ; 
 
       for ( int  i = n - 1 ; i >= 0 ; i -- ) 
       { 
           float  t1 = ( target - res [ i ] . first ) / ( 1.0 * res [ i ] . second ) ; 
         // cout<<t1<<endl; 
           if ( st . empty ( ) ) 
             st . push ( t1 ) ; 
          else   if ( st . top ( ) < t1 ) 
             st . push ( t1 ) ; 
       } 
      return  st . size ( ) ; 
      } 
 } ;