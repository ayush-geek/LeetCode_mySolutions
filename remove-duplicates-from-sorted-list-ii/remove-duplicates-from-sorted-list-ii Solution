/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   deleteDuplicates ( ListNode *  head )   { 
 
      //n2 will work 
      //write iterative 
      //luv the way u lie 
 
 
         ListNode *  tmp = new   ListNode ( 0 ) ; 
         ListNode *  nh = tmp ; 
 
          while ( head != NULL ) 
          { 
             ListNode *  tt = head ; 
              int  ct = 0 ; 
              while ( tt != NULL   &&  tt -> val == head -> val ) 
              { 
                 tt = tt -> next ; 
                 ct ++ ; 
              } 
 
              if ( ct == 1 )    { 
                 tmp -> next = head ; 
                 tmp = tmp -> next ; 
              }  
                 
             head = tt ; 
          } 
         tmp -> next = NULL ; 
 
          return  nh -> next ; 
 
      } 
 } ;