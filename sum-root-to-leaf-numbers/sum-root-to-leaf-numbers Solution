/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
      void   solve ( TreeNode *  root , vector < int > &  res , int  ans ) 
      {    
          if ( root == NULL ) 
              return   ; 
          if ( root -> left == NULL   &&  root -> right == NULL ) 
          { 
             ans = ans * 10 +  root -> val ; 
 
             // cout<<ans<<endl; 
             res . push_back ( ans ) ; 
 
              return   ; 
          } 
 
 
          solve ( root -> left , res , ans * 10 + root -> val ) ; 
          solve ( root -> right , res , ans * 10 + root -> val ) ; 
      } 
 
      int   sumNumbers ( TreeNode *  root )   { 
         
         vector < int >  res ; 
 
          solve ( root , res , 0 ) ; 
          int  ans = 0 ; 
          for ( auto  ele :   res ) 
             ans += ele ; 
          return  ans ; 
      } 
 } ;