/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     
     
   
     
     
     
     ListNode *   rotateRight ( ListNode *  head ,   int  k )   { 
         
         
          //Count Total Number of Nodes 
          if ( head == NULL   || k == 0 ) 
              return  head ; 
         
          int  ct = 0 ; 
         
         ListNode *  tmp = head ; 
         
          while ( tmp != NULL ) 
          { 
             
             ct ++ ; 
             tmp = tmp -> next ; 
             
          } 
         
         
         k = k % ct ; 
         
          if ( k == 0 ) 
              return  head ; 
         
          int  z = ct - k ; 
         
        
         tmp = head ; 
         
           //find Index of n-k th node  
      ListNode *  prev = NULL ; 
          while ( z -- ) 
          {    
            prev = tmp ; 
             tmp = tmp -> next ; 
          } 
         
         
         prev -> next = NULL ; 
         ListNode *  nh = tmp ; 
          
          //cout<<tmp->val<<endl; 
         
         
          while ( tmp != NULL ) 
          {    prev = tmp ; 
             tmp = tmp -> next ; 
             
          } 
         
        prev -> next = head ; 
         
       
         return  nh ; 
         
         
      } 
 } ;