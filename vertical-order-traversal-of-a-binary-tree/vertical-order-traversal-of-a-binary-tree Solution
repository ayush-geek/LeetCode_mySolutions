/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     vector < vector < int >>   verticalTraversal ( TreeNode *  root )   { 
         
 
         unordered_map < TreeNode *   , pair < int , int >>  mp ; 
         queue < TreeNode * >  q ; 
         q . push ( root ) ; 
         mp [ root ] = { 0 , 0 } ; 
 
          // [3,1,4,0,2,2] ->bcoz of this multi set 
         map < int , multiset < pair < int , int >> >  ms ; 
          while ( ! q . empty ( ) ) 
          { 
              int  sz = q . size ( ) ; 
 
              while ( sz -- ) 
              { 
                 TreeNode *  tmp = q . front ( ) ; 
                 q . pop ( ) ; 
 
                  int  r = mp [ tmp ] . first ; 
                  int  c = mp [ tmp ] . second ; 
             
                 ms [ c ] . insert ( { r , tmp -> val } ) ; 
 
                  if ( tmp -> left ) 
                      { 
                         q . push ( tmp -> left ) ; 
                         mp [ tmp -> left ] = { r + 1 , c - 1 } ; 
                      } 
                   if ( tmp -> right ) 
                      { 
                         q . push ( tmp -> right ) ; 
                         mp [ tmp -> right ] = { r + 1 , c + 1 } ; 
                      } 
              } 
 
          } 
 
         vector < vector < int >>  res ; 
          for ( auto  ele :  ms ) 
          { 
              auto  itr = ele . second ; 
 
             vector < int >  tmp ; 
              for ( auto  pr :  itr ) 
              { 
                 tmp . push_back ( pr . second ) ; 
              } 
 
             res . push_back ( tmp ) ; 
          } 
 
          return  res ; 
 
      } 
 } ;