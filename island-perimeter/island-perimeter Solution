class   Solution   { 
 public : 
     
      int   chk ( int  i , int  j , vector < vector < int >> &  grid ) 
      {    int  n = grid . size ( ) ; 
          int  m = grid [ 0 ] . size ( ) ; 
         
          int  ct = 0 ; 
          if ( i - 1 >= 0   &&  grid [ i - 1 ] [ j ] == 1 ) 
             ct ++ ; 
          if ( i + 1 < n  &&  grid [ i + 1 ] [ j ] == 1 ) 
             ct ++ ; 
          if ( j - 1 >= 0   &&  grid [ i ] [ j - 1 ] == 1 ) 
             ct ++ ; 
          if ( j + 1 < m  &&  grid [ i ] [ j + 1 ] == 1 ) 
             ct ++ ; 
          return  ct ; 
             
      } 
     
      int   islandPerimeter ( vector < vector < int >> &  grid )   { 
         
         
          int  n = grid . size ( ) ; 
          int  m = grid [ 0 ] . size ( ) ; 
          int  ans = 0 ; 
         
         
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              for ( int  j = 0 ; j < m ; j ++ ) 
              { 
                  if ( grid [ i ] [ j ] == 1 ) 
                  {    
                     ans += 4 ; 
                     ans -= chk ( i , j , grid ) ; 
                     
                      //cout<<i<<" "<<j<<" "<<chk(i,j,grid)<<endl; 
                  } 
              } 
          } 
         
          return  ans ; 
      } 
 } ;