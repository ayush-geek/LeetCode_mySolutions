/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
      int   solve ( TreeNode *  rt , int &  mx ) 
      { 
        if ( rt == NULL ) 
          return   0 ; 
       
        int  lm = solve ( rt -> left , mx ) ; 
        int  rm = solve ( rt -> right , mx ) ; 
 
       mx = max ( { mx , lm + rt -> val , rm + rt -> val , lm + rm + rt -> val , rt -> val } ) ; 
        return   max ( { lm + rt -> val , rm + rt -> val , rt -> val } ) ; 
      } 
 
      int   maxPathSum ( TreeNode *  root )   { 
         
   
        int  mx = INT_MIN ; 
        int  z = solve ( root , mx ) ; 
       // cout<<z<<endl; 
        return  mx ; 
      } 
 } ;