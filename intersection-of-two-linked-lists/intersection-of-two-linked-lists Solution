/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode(int x) : val(x), next(NULL) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode  * getIntersectionNode ( ListNode  * headA ,  ListNode  * headB )   { 
         
         
          //approach 
         
          //make a map and fill all  
         
          //Values 
     
          // AND cHK 
         
         
 //         unordered_set<ListNode* > st; 
         
         
 //         while(headA!=NULL) 
 //         { 
            
 //             st.insert(headA); 
             
 //             headA=headA->next; 
 //         } 
         
         
 //         while(headB!=NULL) 
 //         { 
 //             if(st.count(headB)==1) 
 //             { 
 //                 return headB; 
 //             } 
             
 //             headB=headB->next; 
 //         } 
         
         
 //         return NULL; 
         
         
          //M2 
         
         
         ListNode *  ptr1 = headA ; 
         ListNode *  ptr2 = headB ; 
         
          while ( ptr1 != ptr2 ) 
          {   if ( ptr1 == NULL ) 
                 ptr1 = headB ; 
             else 
             ptr1 = ptr1 -> next ; 
          
            if ( ptr2 == NULL ) 
                 ptr2 = headA ; 
              else 
             ptr2 = ptr2 -> next ; 
             
             
            
          } 
         
          return  ptr1 ; 
      } 
 } ;