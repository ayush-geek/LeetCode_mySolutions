/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 private : 
 
      int   solve ( TreeNode *  root , int &  mx ) 
      { 
          if ( root == NULL ) 
              return   0 ; 
         
          int  lft = solve ( root -> left , mx ) ; 
          int  rgt = solve ( root -> right , mx ) ; 
 
         mx = max ( lft + rgt + 1 , mx ) ; 
 
          return   max ( lft , rgt ) + 1 ; 
      } 
 
 
 public : 
 
 
      int   diameterOfBinaryTree ( TreeNode *  root )   { 
 
          int  mx = 0 ; 
          int  zz = solve ( root , mx ) ; 
          return  mx - 1 ; 
      } 
 } ;