/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
  class   Solution   { 
  public : 
     
     
     
      int   solve ( TreeNode *  root , int &  mx_h ) 
      { 
          if ( root == NULL ) 
              return   0 ; 
         
          int  lh = solve ( root -> left , mx_h ) ; 
          int  rh = solve ( root -> right , mx_h ) ; 
         
         
         mx_h = max ( lh + rh , mx_h ) ; 
         
          return   max ( lh , rh ) + 1 ; 
      } 
     
     
     
      int   diameterOfBinaryTree ( TreeNode *  root )   { 
      
          //Diameter =lh+rh 
         
         
         
          int  mx_h = 0 ; 
         
          int  hh = solve ( root , mx_h ) ; 
         
          return  mx_h ; 
         
         
      } 
  } ;