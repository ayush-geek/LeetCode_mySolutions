class   Solution   { 
 public : 
      int   maximalNetworkRank ( int  n ,  vector < vector < int >> &  roads )   { 
 
         set < pair < int , int >>  st ; 
 
        vector < int >  adj [ n ] ; 
          for ( auto &  ele :  roads ) 
          { 
             adj [ ele [ 0 ] ] . push_back ( ele [ 1 ] ) ; 
             adj [ ele [ 1 ] ] . push_back ( ele [ 0 ] ) ; 
             st . insert ( { ele [ 0 ] , ele [ 1 ] } ) ; 
             st . insert ( { ele [ 1 ] , ele [ 0 ] } ) ; 
 
          } 
          int  mx = 0 ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          {   
              for ( int  j = i + 1 ; j < n ; j ++ ) 
              { 
              int  z = adj [ i ] . size ( ) + adj [ j ] . size ( ) ; 
 
              if ( st . count ( { i , j } ) == 1 ) 
                 z -- ; 
            //  cout<<i<<" "<<j<<" "<<z<<endl;  
             mx = max ( mx , z ) ; 
              } 
          } 
          return  mx ; 
      } 
 } ;