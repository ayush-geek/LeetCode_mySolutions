class   Solution   { 
 public : 
      bool   isAlienSorted ( vector < string > &  words ,  string order )   { 
         
         unordered_map < char , int >  mp ; 
 
          for ( int  i = 0 ; i < 26 ; i ++ ) 
          { 
             mp [ order [ i ] ] = i ; 
          } 
 
          for ( int  i = 0 ; i < words . size ( ) - 1 ; i ++ ) 
          { 
             int  n = words [ i ] . size ( ) ; 
             int  m = words [ i + 1 ] . size ( ) ; 
            
             for ( int  j = 0 ; j < min ( n , m ) ; j ++ ) 
             { 
                 if ( mp [ words [ i ] [ j ] ] > mp [ words [ i + 1 ] [ j ] ] ) 
                  return   false ; 
                  else   if ( mp [ words [ i ] [ j ] ] < mp [ words [ i + 1 ] [ j ] ] ) 
                      break ;                 
             } 
             if ( words [ i ] . find ( words [ i + 1 ] ) != - 1   &&  n > m ) 
                  return   false ; 
          } 
          return   true ; 
      } 
 } ;