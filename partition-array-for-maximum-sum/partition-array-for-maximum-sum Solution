class   Solution   { 
 public : 
 
      int   solve ( int  i , vector < int > &  arr , int  k , vector < int > &  dp ) 
      { 
          if ( i == arr . size ( ) ) 
              return   0 ; 
          if ( dp [ i ] != - 1 ) 
              return  dp [ i ] ; 
          int  ans = 0 ; 
          int  mx = 0 ; 
          for ( int  j = i ; j < min ( i + k , ( int ) arr . size ( ) ) ; j ++ ) 
          { 
             mx = max ( mx , arr [ j ] ) ; 
              int  sm = ( j - i + 1 ) * mx  + solve ( j + 1 , arr , k , dp ) ; 
             ans = max ( ans , sm ) ; 
          } 
          return  dp [ i ] = ans ; 
      } 
 
    int   maxSumAfterPartitioning ( vector < int > &  arr ,   int  k )   { 
        int  n = arr . size ( ) ; 
         vector < int >   dp ( n , - 1 ) ; 
          return   solve ( 0 , arr , k , dp ) ;         
      } 
 } ;