class   Solution   { 
 public : 
     
      void   dfs ( int  i , vector < pair < int , int >>  adj [ ] , int &  mn , vector < int > &  vis ) 
      { 
          if ( vis [ i ] == 1 ) 
              return   ; 
         
         vis [ i ] = 1 ; 
          for ( auto  ele : adj [ i ] ) 
          { 
             mn = min ( mn , ele . second ) ; 
             
              if ( ! vis [ ele . first ] ) 
                  dfs ( ele . first , adj , mn , vis ) ; 
          } 
      } 
     
      int   minScore ( int  n ,  vector < vector < int >> &  roads )   { 
      
         
         vector < pair < int , int >>  adj [ n + 1 ] ; 
         
          //solve 
         
          for ( int  i = 0 ; i < roads . size ( ) ; i ++ ) 
          { 
             adj [ roads [ i ] [ 0 ] ] . push_back ( { roads [ i ] [ 1 ] , roads [ i ] [ 2 ] } ) ; 
             adj [ roads [ i ] [ 1 ] ] . push_back ( { roads [ i ] [ 0 ] , roads [ i ] [ 2 ] } ) ; 
          } 
         
         vector < int >   vis ( n + 1 , 0 ) ; 
          int  mn = roads [ 0 ] [ 2 ] ; 
          dfs ( 1 , adj , mn , vis ) ; 
         
          return  mn ; 
         
         
      } 
 } ;