/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   removeNthFromEnd ( ListNode *  head ,   int  n )   { 
          //n-k+1 from start 
         ListNode *  res = head ; 
       
 
          int  sz = 0 ; 
         ListNode *  tmp = head ; 
          while ( tmp != NULL ) 
              { 
                 tmp = tmp -> next ; 
                 sz ++ ; 
              } 
          if ( sz - n == 0 ) 
              return  head -> next ; 
          // cout<<sz<<endl; 
          int  l = 1 ; 
         tmp = head ; 
          while ( l < ( sz - n ) ) 
          {    
             tmp = tmp -> next ; 
             l ++ ; 
 
          } 
          if ( tmp -> next != NULL ) 
             tmp -> next = tmp -> next -> next ; 
 
          return  res ; 
      } 
 } ;