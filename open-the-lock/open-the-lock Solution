class   Solution   { 
 public : 
      int   openLock ( vector < string > &  deadends ,  string target )   { 
      
         unordered_set < string >   st ( deadends . begin ( ) , deadends . end ( ) ) ; 
         unordered_set < string >  vis ; 
         
          if ( st . count ( "0000" ) == 1 ) 
              return   - 1 ; 
         queue < string >  q ; 
 
         q . push ( "0000" ) ; 
         vis . insert ( "0000" ) ; 
          int  steps = 0 ; 
          while ( ! q . empty ( ) ) 
          {    
              int  sz = q . size ( ) ; 
              while ( sz -- ) 
              { 
             string tp = q . front ( ) ;  q . pop ( ) ; 
          
           
              if ( tp == target ) 
                  return  steps ; 
              for ( int  i = 0 ; i < 4 ; i ++ ) 
              {    
                  char  tmp = tp [ i ] ; 
                  int  z = tmp - '0' ; 
 
                  int  p = ( z + 1 ) % 10 ; 
                 
                     tp [ i ] = p + '0' ; 
                      if ( st . count ( tp ) == 0   &&   ! vis . count ( tp ) ) 
                      { 
                         q . push ( tp ) ; 
                         vis . insert ( tp ) ; 
                      } 
                 p = ( z - 1 ) ; 
                  if ( p < 0 ) 
                     p = 9 ; 
                  tp [ i ] = p + '0' ; 
                   if ( st . count ( tp ) == 0   &&   ! vis . count ( tp ) ) 
                      { 
                         q . push ( tp ) ; 
                         vis . insert ( tp ) ; 
                      } 
 
                 tp [ i ] = tmp ; 
              } 
                 
              } 
             steps ++ ; 
            
          } 
          return   - 1 ; 
      } 
 } ;