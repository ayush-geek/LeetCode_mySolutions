class   Solution   { 
 public : 
 
     map < pair < int , int > , int >  dp ; 
      int   solve ( int  i , int  s1 , vector < int > &  rods ) 
      { 
          if ( i == rods . size ( ) ) 
          { 
              if ( s1 == 0 ) 
                  return   0 ; 
              return  INT_MIN ; 
          } 
          if ( dp . count ( { i , 5000 + s1 } ) ) 
              return  dp [ { i , 5000 + s1 } ] ; 
          int  p1 = solve ( i + 1 , s1 , rods ) ; 
          int  p2 = max ( rods [ i ] + solve ( i + 1 , s1 + rods [ i ] , rods ) , 
              solve ( i + 1 , s1 - rods [ i ] , rods ) 
          ) ; 
          // int p3=solve(i+1,s1,s2+rods[i],rods); 
     
          return  dp [ { i , 5000 + s1 } ] = max ( { p1 , p2 } ) ; 
      }    
 
 
      int   tallestBillboard ( vector < int > &  rods )   { 
          //split into 2 equal subarryas 
          //with max sum 
 
         
          return   solve ( 0 , 0 , rods ) ; 
 
 
      } 
 } ;