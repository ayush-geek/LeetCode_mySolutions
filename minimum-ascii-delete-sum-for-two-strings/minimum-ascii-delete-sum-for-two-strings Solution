class   Solution   { 
 public : 
      int   lcs ( string s1 , string s2 ) 
      {        
 
        
 
 
 
          int  n = s1 . size ( ) ; 
          int  m = s2 . size ( ) ; 
 
          long   long  z1 = 0 ; 
          for ( auto &  ele :  s1 ) 
             z1 += ele ;  
             
          for ( auto &  ele :  s2 ) 
             z1 += ele ; 
         
         
 
         vector < vector < int >>   dp ( n + 1 , vector < int >   ( m + 1 , 0 ) ) ; 
          int  i , j ; 
 
          //base cae 
     
 
          for ( i = 1 ; i <= n ; i ++   ) 
          { 
              for (  j = 1 ; j <= m ; j ++ ) 
              { 
                  if ( s1 [ i - 1 ] == s2 [ j - 1 ] ) 
                     dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ] + s1 [ i - 1 ] ; 
                  else 
                     dp [ i ] [ j ] = max ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] ) ; 
              } 
          } 
         
 
          return  z1 - 2 * dp [ n ] [ m ] ; 
 
 
      } 
 
      int   minimumDeleteSum ( string s1 ,  string s2 )   { 
       //lcs 
          return   lcs ( s1 , s2 ) ; 
      } 
 } ;