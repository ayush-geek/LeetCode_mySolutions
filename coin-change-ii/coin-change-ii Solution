class   Solution   { 
 public : 
 
      int   solve ( int  i , int  amount , vector < int > &  coins , vector < vector < int >> &  dp ) 
      { 
          if ( amount == 0 ) 
              return   1 ; 
          if ( i >= coins . size ( ) ) 
              return   0 ; 
 
          if ( dp [ i ] [ amount ] != - 1 ) 
              return  dp [ i ] [ amount ] ; 
         
          int  ans = 0 ; 
          if ( coins [ i ] <= amount ) 
             ans = solve ( i , amount - coins [ i ] , coins , dp ) ; 
         
         ans += solve ( i + 1 , amount , coins , dp ) ; 
         
          //cout<<i<<" "<<amount<<endl; 
 
          return  dp [ i ] [ amount ] = ans ; 
         
      } 
 
      int   change ( int  amount ,  vector < int > &  coins )   { 
         
 
          int  n = coins . size ( ) ; 
 
         vector < vector < int >>   dp ( n , vector < int >   ( amount + 1 , - 1 ) ) ; 
 
          int  z1 = solve ( 0 , amount , coins , dp ) ; 
 
          // if(z1>=1e9) 
          //     return 0; 
          // else 
              return  z1 ; 
      } 
 } ;