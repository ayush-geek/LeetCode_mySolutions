class   Solution   { 
 public : 
      int   countSquares ( vector < vector < int >> &  matrix )   { 
         
          int  mod = 1e9 + 7 ; 
          //n3 using prefix 
          int  n = matrix . size ( ) ; 
          int  m = matrix [ 0 ] . size ( ) ; 
         vector < vector < int >>   pref ( n , vector < int >   ( m , 0 ) ) ; 
 
          for ( int  i = 0 ; i < matrix . size ( ) ; i ++ ) 
          { 
              for ( int  j = 0 ; j < matrix [ 0 ] . size ( ) ; j ++ ) 
              { 
                  if ( i != 0 ) 
                     pref [ i ] [ j ] += pref [ i - 1 ] [ j ] ; 
 
                  if ( j != 0 ) 
                     pref [ i ] [ j ] += pref [ i ] [ j - 1 ] ; 
                 
                  if ( matrix [ i ] [ j ] == 1 ) 
                     pref [ i ] [ j ] ++ ; 
                  if ( i - 1 >= 0   &&  j - 1 >= 0 ) 
                     pref [ i ] [ j ] -= pref [ i - 1 ] [ j - 1 ] ; 
 
                  //cout<<pref[i][j]<<" "; 
              } 
             // cout<<endl; 
          } 
 
          int  ans = 0 ; 
         ans = ( ans + pref [ n - 1 ] [ m - 1 ] ) % mod ; 
         cout << ans << endl ; 
          for ( int  k = 2 ; k <= n ; k ++ ) 
          {    
              for ( int  i = 0 ; i < matrix . size ( ) ; i ++ ) 
          { 
              for ( int  j = 0 ; j < matrix [ 0 ] . size ( ) ; j ++ ) 
              { 
 
                  int  ps1 = 0 ; 
                  int  ps2 = 0 ; 
                  int  ps3 = 0 ; 
 
                  if ( j - k >= 0 ) 
                  { 
                     ps1 = pref [ i ] [ j - k ] ; 
                  } 
                  if ( i - k >= 0 ) 
                  { 
                     ps2 = pref [ i - k ] [ j ] ; 
                  } 
 
                  if ( i - k >= 0   &&  j - k >= 0 ) 
                      { 
                         ps3 = pref [ i - k ] [ j - k ] ; 
                      } 
 
                  int  cs = pref [ i ] [ j ] - ps1 - ps2 + ps3 ; 
 
                  if ( cs == k * k ) 
                     ans = ( ans + 1 ) % mod ; 
              } 
          } 
 
          } 
          return  ans ; 
      } 
 } ;