class   Solution   { 
 public : 
 
      bool   dfs ( int  i , int  col , vector < vector < int >> &  adj , vector < int > &  vis ) 
 { 
     vis [ i ] = col ; 
 
 
      for ( auto &  ele :  adj [ i ] ) 
      { 
          if ( vis [ ele ] == 0 ) 
              { 
                  if ( ! dfs ( ele , - 1 * col , adj , vis ) ) 
                      return   false ; 
              } 
          else   if ( vis [ ele ] == col ) 
              return   false ; 
      } 
      return   true ; 
 } 
 
      bool   isBipartite ( vector < vector < int >> &  graph )   { 
          int  n = graph . size ( ) ; 
         vector < int >   vis ( n , 0 ) ; 
 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( ! vis [ i ] ) 
              { 
                  if (   !   dfs ( i , - 1 , graph , vis ) ) 
                      return   false ; 
              } 
               
          } 
          return   true ; 
      } 
 } ;