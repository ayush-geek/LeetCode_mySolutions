class   Solution   { 
 public : 
      int   singleNonDuplicate ( vector < int > &  nums )   { 
         
          int  l = 0 ; 
          int  h = nums . size ( ) - 1 ; 
     
          while ( l <= h ) 
          { 
              int  mid = ( l + h ) / 2 ; 
 
              if ( mid != 0   &&  mid != nums . size ( ) - 1   &&  nums [ mid ] != nums [ mid - 1 ]   &&  nums [ mid ] != nums [ mid + 1 ]   ) 
                  return  nums [ mid ] ; 
 
 
              else   if ( mid % 2 == 0 ) 
              { 
                  if ( mid < nums . size ( ) - 1   &&  nums [ mid ] == nums [ mid + 1 ] ) 
                  { 
                    l = mid + 1 ; 
                  } 
 
                  else 
                     h = mid - 1 ; 
              } 
              else 
              { 
                   if ( mid >= 0   &&  nums [ mid ] == nums [ mid - 1 ] ) 
                  { 
                    l = mid + 1 ; 
                  } 
 
                  else 
                     h = mid - 1 ; 
              } 
              } 
         
          return  nums [ l ] ; 
      } 
 } ;