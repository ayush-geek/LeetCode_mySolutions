class   Solution   { 
 public : 
      int   findTheCity ( int  n ,  vector < vector < int >> &  edges ,   int  dt )   { 
 
 
       //Har Point Ka Shortest Distance Har Point SE    
 
       //Multiple src point  
 
         vector < vector < int >>   mat ( n , vector < int >   ( n , 1e9 ) ) ; 
 
          for ( auto &  ele :  edges ) 
          { 
              int  u = ele [ 0 ] ; 
              int  v = ele [ 1 ] ; 
              int  w = ele [ 2 ] ; 
 
             mat [ u ] [ v ] = w ; 
              mat [ v ] [ u ] = w ; 
          } 
 
          for ( int  i = 0 ; i < n ; i ++ ) 
             mat [ i ] [ i ] = 0 ; 
 
 
          for ( int  via = 0 ; via < n ; via ++ ) 
 	     { 
 	         for ( int  i = 0 ; i < n ; i ++ ) 
 	         { 
 	             for ( int  j = 0 ; j < n ; j ++ ) 
 	             { 
 	                mat [ i ] [ j ] = min ( mat [ i ] [ j ] , mat [ i ] [ via ] + mat [ via ] [ j ] ) ; 
 	             } 
 	         } 
 	     } 
          int  mx = INT_MAX ; 
          int  pos = n - 1 ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          {    
              int  ct = 0 ; 
              for ( int  j = 0 ; j < n ; j ++ ) 
              { 
                  if ( i != j  &&  mat [ i ] [ j ] <= dt ) 
                     ct ++ ; 
              } 
              //cout<<i<<" "<<ct<<endl; 
              if ( ct <= mx ) 
                  { 
                     mx = min ( mx , ct ) ; 
                     pos = i ; 
                  } 
          } 
 	     return  pos ; 
 	    
 
      } 
 } ;