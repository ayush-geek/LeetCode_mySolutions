class   Solution   { 
 public : 
 
      // void solve(int i,vector<int>& nums,vector<int>& tmp,vector<vector<int>>& res) 
      // { 
      //     if(i==nums.size()) 
      //     { 
      //         res.push_back(tmp); 
      //         return ; 
      //     } 
 
      //     //take 
      //     tmp.push_back(nums[i]); 
      //     solve(i+1,nums,tmp,res); 
      //     tmp.pop_back(); 
 
      //     //not take 
      //     solve(i+1,nums,tmp,res); 
      // } 
 
     vector < vector < int >>   subsets ( vector < int > &  nums )   { 
         
         vector < vector < int >>  res ; 
          // vector<int> tmp; 
          // solve(0,nums,tmp,res); 
          // return res; 
          int  n = nums . size ( ) ; 
          int  p = ( 1 << n ) ; 
          for ( int  i = 0 ; i < p ; i ++ ) 
          {    
             vector < int >  tmp ; 
              for ( int  j = 0 ; j < n ; j ++ ) 
              { 
                  if (   ( i  &   ( 1 << j )   ) != 0   ) 
                  { 
                     tmp . push_back ( nums [ j ] ) ; 
                  } 
              } 
             res . push_back ( tmp ) ; 
          } 
          return  res ; 
      } 
 } ;