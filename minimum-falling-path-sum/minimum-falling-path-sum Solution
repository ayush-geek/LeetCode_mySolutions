class   Solution   { 
 public : 
      int   minFallingPathSum ( vector < vector < int >> &  matrix )   { 
          int  n = matrix . size ( ) ; 
          int  m = matrix [ 0 ] . size ( ) ; 
          int  ans = INT_MAX ; 
         vector < vector < int >>   dp ( n + 1 , vector < int >   ( m + 2 , 1e9 ) ) ; 
 
          for ( int  i = 1 ; i <= n ; i ++ ) 
          { 
              for ( int  j = 1 ; j <= m ; j ++ ) 
              { 
                  if ( i == 1 ) 
                     dp [ i ] [ j ] = matrix [ i - 1 ] [ j - 1 ] ; 
                  else 
                  { 
                     dp [ i ] [ j ] = matrix [ i - 1 ] [ j - 1 ] ; 
                     dp [ i ] [ j ] += min ( dp [ i - 1 ] [ j - 1 ]   , min ( dp [ i - 1 ] [ j ]   , dp [ i - 1 ] [ j + 1 ] ) ) ; 
                  } 
              } 
          } 
 
          for ( int  j = 1 ; j <= m ; j ++ ) 
          { 
             ans = min ( ans , dp [ n ] [ j ] ) ; 
          } 
 
          return  ans ; 
      } 
 } ;