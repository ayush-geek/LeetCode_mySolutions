class   Solution   { 
 public : 
     
 
      int   lastStoneWeightII ( vector < int > &  stones )   { 
         
         //not a queuetsion of pq 
         //Try all 
        
          int  n = stones . size ( ) ; 
         int  sum = 0 ; 
         for ( auto &  ele :  stones ) 
         sum += ele ; 
 
          int  tgt = sum / 2 ; 
 
         vector < vector < int >>   dp ( n + 1 , vector < int >   ( tgt + 1 , 0 ) ) ; 
     for ( int  i = 0 ; i <= n ; i ++ ) 
             dp [ i ] [ 0 ] = true ; 
         
 
 
   for   ( int  i  =   1 ;  i  <=  n ;  i ++ ) 
          { 
              for   ( int  j  =   1 ;  j  <=  tgt ;  j ++ ) 
              { 
                  if   ( stones [ i  -   1 ]   <=  j ) 
                     dp [ i ] [ j ]   =  dp [ i  -   1 ] [ j  -  stones [ i  -   1 ] ]   ||  dp [ i -   1 ] [ j ] ; 
                  else 
                      dp [ i ] [ j ]   =  dp [ i  -   1 ] [ j ] ; 
               } 
          } 
       
       
          int  diff  =  INT_MAX ; 
          
       
          for   ( int  j  = 0 ;  j  <= tgt ;  j ++ ) 
          { 
             
              if   ( dp [ n ] [ j ]   ==   true ) 
               diff  =   min ( diff ,  sum  -   2 * j ) ; 
          } 
 
          return  diff ; 
      } 
 } ;