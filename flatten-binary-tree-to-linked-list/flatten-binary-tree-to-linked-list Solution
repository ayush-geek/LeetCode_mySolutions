/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     
      void   preorder ( TreeNode *  root , TreeNode * &  rt ) 
      { 
          if ( root == NULL ) 
          { 
 
              return   ; 
          } 
         
         
        // cout<<root->val<<endl; 
        TreeNode  * tmp = root -> right ; 
         rt -> left = NULL ; 
         rt -> right = root ; 
       
         
         rt = rt -> right ; 
          preorder ( root -> left , rt ) ; 
        
         
          preorder ( tmp , rt ) ; 
    
        
         
      } 
     
     
      void   flatten ( TreeNode *  root )   { 
         
          //Just Do Pre order traversal 
         
         TreeNode *  rt = new   TreeNode ( ) ; 
             
         TreeNode *  cur = rt ; 
         
         
          preorder ( root , rt ) ; 
         
         rt = NULL ; 
         
         
         
         
         
         
        root =  cur -> right ; 
         
      } 
 } ;