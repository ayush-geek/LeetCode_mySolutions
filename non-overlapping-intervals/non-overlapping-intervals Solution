class   Solution   { 
 public : 
      int   eraseOverlapIntervals ( vector < vector < int >> &  intervals )   { 
          int  n = intervals . size ( ) ; 
          sort ( intervals . begin ( ) , intervals . end ( ) , [ ] ( vector < int > &  a , vector < int > &  b ) 
          { 
              if ( a [ 0 ] == b [ 0 ] ) 
                  return  a [ 1 ] < b [ 1 ] ; 
              else  
                  return  a [ 0 ] < b [ 0 ] ; 
          } ) ; 
 
     pair < int , int >  prev = { intervals [ 0 ] [ 0 ] , intervals [ 0 ] [ 1 ] } ; 
      int  ct = 0 ; 
      for ( int  i = 1 ; i < n ; i ++ ) 
      { 
          if ( prev . second > intervals [ i ] [ 0 ] ) 
              { 
                 ct ++ ; 
                 prev . second = min ( intervals [ i ] [ 1 ] , prev . second ) ; 
              } 
          else 
              { 
                 prev . first = intervals [ i ] [ 0 ] ; 
                 prev . second = intervals [ i ] [ 1 ] ; 
 
              } 
      } 
 
      return  ct ; 
      } 
 } ;