class   Solution   { 
 public : 
     
     
      bool   pal ( string res , int  i , int  j ) 
      { 
       
         
          while ( i < j ) 
          { 
              if ( res [ i ++ ] != res [ j -- ] ) 
                  return   false ; 
          } 
         
          return   true ; 
      } 
     
     
     
     string  longestPalindrome ( string s )   { 
         
         
          //USE sLIDING wINDOW 
         
        
         
         vector < vector < bool >>   v ( s . size ( ) , vector < bool >   ( s . size ( ) , false ) ) ; 
         
         
          for ( int  i = 0 ; i < s . size ( ) ; i ++ ) 
             v [ i ] [ i ] = true ; 
         
          int  n = s . size ( ) ; 
         string ans = "" ; 
         ans += s [ 0 ] ; 
          for ( int  i = n - 1 ; i >= 0 ; i -- ) 
          { 
              for ( int  j = i + 1 ; j < s . size ( ) ; j ++ ) 
              { 
                 
                 
                 
                  int  len = j - i + 1 ; 
                 
                 if ( s [ i ] == s [ j ] ) 
                 { 
                     if ( len == 2   ||  v [ i + 1 ] [ j - 1 ] == true ) { 
                        v [ i ] [ j ] = true ; 
                    
                    
                     if ( len > ans . size ( ) ) 
                        ans = s . substr ( i , len ) ; 
                     } 
                 } 
                 
                 
                 
                     
              } 
          } 
          // cout<<s.size()<<endl; 
          return  ans ; 
      } 
 } ;