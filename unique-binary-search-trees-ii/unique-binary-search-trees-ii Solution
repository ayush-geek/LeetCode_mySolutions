/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
 
      vector < TreeNode * >   solve ( int  l , int  r ) 
       { 
          vector < TreeNode * >  res ; 
           if ( l > r ) 
           { 
              res . push_back ( NULL ) ; 
               return  res ; 
           } 
 
 
           for ( int  i = l ; i <= r ; i ++ ) 
           { 
              vector < TreeNode * >  left = solve ( l , i - 1 ) ; 
               vector < TreeNode * >  right = solve ( i + 1 , r ) ; 
 
                for ( auto &  ele :  left ) 
                { 
                    for ( auto &  ele2 :  right ) 
                    { 
                       TreeNode *  root  =   new   TreeNode ( i ) ; 
                     root -> left  =  ele ; 
                     root -> right  = ele2 ; 
                     res . push_back ( root ) ; 
                    } 
                } 
 
           } 
           return  res ; 
       } 
 
     vector < TreeNode * >   generateTrees ( int  n )   { 
         vector < TreeNode * > V ; 
         
          if ( n == 0 )  
              return  V ; 
          return   solve ( 1 , n ) ; 
      } 
 } ;