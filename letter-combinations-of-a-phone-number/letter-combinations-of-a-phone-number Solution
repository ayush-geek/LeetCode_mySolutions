class   Solution   { 
 public : 
  map < int , string >  mp ; 
      void   solve ( int  i , string digits , vector < string > &  res , string &  tmp ) 
      { 
          if ( i == digits . size ( )   &&   ! tmp . empty ( ) ) 
          { 
             res . push_back ( tmp ) ; 
              return   ; 
          } 
 
          // cout<<mp[digits[i]]<<endl; 
          for ( int  j = 0 ; j < mp [ digits [ i ] - '0' ] . size ( ) ; j ++ ) 
           {    cout << tmp << " " << mp [ 3 ] << endl ; 
                 tmp . push_back ( mp [ digits [ i ] - '0' ] [ j ] ) ; 
 
                  solve ( i + 1 , digits , res , tmp ) ; 
                 tmp . pop_back ( ) ; 
          } 
      } 
 
     vector < string >   letterCombinations ( string digits )   { 
         
        
         mp [ 2 ] = "abc" ; 
         mp [ 3 ] = "def" ; 
         mp [ 4 ] = "ghi" ; 
 
         mp [ 5 ] = "jkl" ; 
         mp [ 6 ] = "mno" ; 
 
         mp [ 7 ] = "pqrs" ; 
         mp [ 8 ] = "tuv" ; 
 
         mp [ 9 ] = "wxyz" ; 
 
         vector < string >  res ; 
         string tmp = "" ; 
          solve ( 0 , digits , res , tmp ) ; 
 
          return  res ; 
     
      } 
 } ;