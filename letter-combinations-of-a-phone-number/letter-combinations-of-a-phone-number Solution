class   Solution   { 
 public : 
 
      void   solve ( int  i , string digits , unordered_map < char , string > &  mp , vector < string > &  res , string &  tmp ) 
 {    
 
      if ( i == digits . size ( ) ) 
      { 
          if ( tmp . size ( ) != 0 ) 
         res . push_back ( tmp ) ; 
          return   ; 
      } 
        
 
      for ( int  k = 0 ; k < mp [ digits [ i ] ] . size ( ) ; k ++ ) 
      { 
         tmp . push_back ( mp [ digits [ i ] ] [ k ] ) ; 
          solve ( i + 1 , digits , mp , res , tmp ) ; 
         tmp . pop_back ( ) ; 
      } 
 
 } 
     
     vector < string >   letterCombinations ( string digits )   { 
     unordered_map < char , string >  mp ; 
     mp [ '2' ] = "abc" ; 
     mp [ '3' ] = "def" ; 
     mp [ '4' ] = "ghi" ; 
     mp [ '5' ] = "jkl" ; 
     mp [ '6' ] = "mno" ; 
     mp [ '7' ] = "pqrs" ; 
     mp [ '8' ] = "tuv" ; 
     mp [ '9' ] = "wxyz" ; 
 
         vector < string >  res ; 
         string tmp = "" ; 
          solve ( 0 , digits , mp , res , tmp ) ; 
          return  res ; 
      } 
 } ;