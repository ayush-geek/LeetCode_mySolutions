class   Solution   { 
 public : 
      int   trap ( vector < int > &  nums )   { 
         
          int  n = nums . size ( ) ; 
          int  ans = 0 ; 
          //with prefix and suffix 
 
         vector < int >   pref ( n , 0 ) ; 
 
         vector < int >   suf ( n , 0 ) ; 
 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( i == 0 ) 
                 pref [ i ] = 0 ; 
              else 
                 pref [ i ] = max ( pref [ i - 1 ] , nums [ i - 1 ] ) ; 
                  
          } 
 
           for ( int  i = n - 1 ; i >= 0 ; i -- ) 
          { 
              if ( i == n - 1 ) 
                 suf [ i ] = 0 ; 
              else 
                 suf [ i ] = max ( suf [ i + 1 ] , nums [ i + 1 ] ) ; 
 
                
          } 
 
          for ( int  i = 1 ; i < n - 1 ; i ++ ) 
          {    
              //cout<<min(pref[i],suf[i])<<" "<<nums[i]<<endl; 
             ans += max ( min ( pref [ i ] , suf [ i ] ) - nums [ i ] , 0 ) ; 
          } 
          return  ans ;  
      } 
 } ;