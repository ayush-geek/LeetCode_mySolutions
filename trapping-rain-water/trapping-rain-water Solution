class   Solution   { 
 public : 
      int   trap ( vector < int > &  height )   { 
          int  n = height . size ( ) ; 
         vector < int >   pref ( n , 0 ) ; 
          for ( int  i = 1 ; i < n ; i ++ ) 
             pref [ i ] = max ( height [ i - 1 ] , pref [ i - 1 ] ) ; 
         
         vector < int >   suf ( n , 0 ) ; 
              for ( int  i = n - 2 ; i >= 0 ; i -- ) 
              { 
                 suf [ i ] = max ( height [ i + 1 ] , suf [ i + 1 ] ) ; 
              } 
 
          int  ans = 0 ; 
          for ( int  i = 1 ; i < n - 1 ; i ++ ) 
          {    
              int  z = min ( pref [ i ] , suf [ i ] ) - height [ i ] ; 
             ans += ( z > 0 ) ? z : 0 ; 
             cout << ans << endl ; 
          } 
          return  ans ; 
         
      } 
 } ;