class   Solution   { 
 public : 
      int   trap ( vector < int > &  height )   { 
         
         
          //use prefix and suffix sum 
          int  ans = 0 ; 
          int  n = height . size ( ) ; 
         vector < int >  pref ; 
         vector < int >  suf ; 
         
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( i == 0 ) 
             pref . push_back ( height [ 0 ] ) ; 
             
              else 
                 pref . push_back ( max ( height [ i ] , pref . back ( ) ) ) ; 
             
          } 
         
         
           for ( int  j = n - 1 ; j >= 0 ; j -- ) 
          { 
              if ( j == n - 1 ) 
             suf . push_back ( height [ j ] ) ; 
             
              else 
                 suf . push_back ( max ( height [ j ] , suf . back ( ) ) ) ; 
             
          } 
         
          reverse ( suf . begin ( ) , suf . end ( ) ) ; 
         
          //water will not accumulate at end points 
         
         
         
          for ( int  i = 1 ; i < n - 1 ; i ++ ) 
          { 
              if ( min ( pref [ i ] , suf [ i ] ) - height [ i ] >= 0 ) 
                 ans += min ( pref [ i ] , suf [ i ] ) - height [ i ] ; 
             
          } 
          return  ans ; 
      } 
 } ;