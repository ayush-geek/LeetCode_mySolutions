/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   deleteMiddle ( ListNode *  head )   { 
       //fast==NULL || fast->next==NULL 
       //slow points to middle; 
     ListNode *  tmp = head ; 
      ListNode *  slow = head ; 
      ListNode *  fast = head ; 
      ListNode *  prev = NULL ; 
       if ( head == NULL   ||  head -> next == NULL )  
          return   NULL ;    
 
          while ( fast != NULL   &&  fast -> next != NULL ) 
          {    
             prev = slow ; 
             slow = slow -> next ; 
             fast = fast -> next -> next ; 
          } 
 
          if ( prev == NULL ) 
              return  slow ; 
          else 
          { 
             prev -> next = slow -> next ; 
          } 
          return  tmp ; 
      } 
 } ;