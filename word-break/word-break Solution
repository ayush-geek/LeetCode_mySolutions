class   Solution   { 
 public : 
 
      int   solve ( int  i , string s , unordered_set < string > &  st , vector < int > &  dp ) 
      { 
          if ( i == s . size ( ) ) 
              return   1 ; 
          if ( dp [ i ] != - 1 ) 
              return  dp [ i ] ; 
          int  ans = 0 ; 
          for ( int  j = i ; j < s . size ( ) ; j ++ ) 
          { 
             string tmp = s . substr ( i , j - i + 1 ) ; 
             
              if ( st . count ( tmp ) ) 
              { 
                 ans = max ( ans , solve ( j + 1 , s , st , dp ) ) ; 
              } 
          } 
          return  dp [ i ] = ans ; 
      } 
 
      bool   wordBreak ( string s ,  vector < string > &  wordDict )   { 
         unordered_set < string >   st ( wordDict . begin ( ) , wordDict . end ( ) ) ; 
          int  n = s . size ( ) ; 
         vector < int >   dp ( n , - 1 ) ; 
          return   solve ( 0 , s , st , dp ) ; 
      } 
 } ;