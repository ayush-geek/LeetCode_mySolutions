class   Solution   { 
  public : 
     
      bool   solve ( int  i , string s , unordered_set < string > &  st , vector < int > &  dp ) 
      { 
          if ( i == s . size ( ) ) 
              return   true ; 
         
         
          if ( dp [ i ] != - 1 ) 
              return  dp [ i ] ; 
         string tmp = "" ; 
         
          for ( int  pos = i ; pos < s . size ( ) ; pos ++ ) 
          {    tmp . push_back ( s [ pos ] ) ; 
              if ( st . count ( tmp ) == 1   &&   solve ( pos + 1 , s , st , dp ) ) 
              { dp [ i ] = 1 ; 
               return   true ;    
               //return true; 
              } 
           
     
          } 
         
     dp [ i ] = 0 ; 
         
      return   false ; 
         
      } 
     
     
     
     
     
      bool   wordBreak ( string s ,  vector < string > &  wordDict )   { 
         
         unordered_set < string >  st ; 
         
          for ( int  i = 0 ; i < wordDict . size ( ) ; i ++ ) 
             st . insert ( wordDict [ i ] ) ; 
         
         vector < int >   dp ( s . size ( ) , - 1 ) ; 
         
         
          return   solve ( 0 , s , st , dp ) ; 
      } 
  } ;