/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
  class   Solution   { 
  public : 
     
     
     ListNode *   reverse ( ListNode *  head ) 
      { 
         ListNode *  prev = NULL ; 
         
          while ( head != NULL ) 
          { 
             ListNode *  tmp = head -> next ; 
             
             head -> next = prev ; 
             prev = head ; 
             
             head = tmp ; 
          } 
          return  prev ; 
      } 
     
     
     
     
     
     ListNode *   addTwoNumbers ( ListNode *  l1 ,  ListNode *  l2 )   { 
         
         
          // l1=reverse(l1); 
          // l2=reverse(l2); 
         
          //cout<<l1->val<<" "<<l2->val<<endl; 
         
         ListNode *  ans = new   ListNode ( 0 ) ; 
         ListNode *  t = ans ; 
         
          int  carry = 0 ; 
          while ( l1 != NULL   ||  l2 != NULL ) 
          { 
             
              if ( l1 != NULL   &&  l2 != NULL ) 
              { 
                  int  z = l1 -> val + l2 -> val + carry ; 
                 
                  if ( z > 9 ) 
                     carry = 1 ; 
                  else 
                     carry = 0 ; 
                 
                 t -> next = new   ListNode ( ( z ) % 10 ) ; 
                 // t=t->next; 
                 
                 l1 = l1 -> next ; 
                 l2 = l2 -> next ; 
                 
                 
              } 
             
              else   if ( l1 == NULL ) 
              { 
                  int  z = l2 -> val + carry ; 
                 
                  if ( z > 9 ) 
                     carry = 1 ; 
                  else 
                     carry = 0 ; 
                 
                t -> next = new   ListNode ( ( z ) % 10 ) ; 
                //   t=t->next; 
                 l2 = l2 -> next ; 
                 
              } 
             
              else 
              { 
                  int  z = l1 -> val + carry ; 
                 
                  if ( z > 9 ) 
                     carry = 1 ; 
                  else 
                     carry = 0 ; 
                 
                  t -> next = new   ListNode ( ( z ) % 10 ) ; 
                  // t=t->next; 
                 
                 l1 = l1 -> next ; 
              } 
           
             
              //cout<<t->val<<endl; 
            t = t -> next ; 
             
          } 
         
          //cout<<t->val<<endl; 
         
          if ( carry == 1 ) { 
             t -> next = new   ListNode ( 1 ) ; 
          } 
         
 
         
         
         
         
          return  ans -> next ; 
      } 
  } ;