/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   addTwoNumbers ( ListNode *  l1 ,  ListNode *  l2 )   { 
          //already Revesed 
          int  carry = 0 ; 
         ListNode *  l = l1 ; 
         ListNode *  prev = NULL ; 
          while ( l1 != NULL   &&  l2 != NULL ) 
          { 
             l1 -> val = ( l1 -> val  + l2 -> val  + carry ) ; 
             carry = ( l1 -> val ) / 10 ; 
             l1 -> val %= 10 ; 
 
             prev = l1 ; 
             l1 = l1 -> next ; 
             l2 = l2 -> next ; 
          }    
 
          while ( l1 != NULL ) 
          { 
              l1 -> val = ( l1 -> val  + carry ) ; 
             carry = ( l1 -> val ) / 10 ; 
             l1 -> val %= 10 ; 
             prev = l1 ; 
             l1 = l1 -> next ; 
          } 
 
 
           while ( l2 != NULL ) 
          { 
              l2 -> val = ( l2 -> val  + carry ) ; 
             carry = ( l2 -> val ) / 10 ; 
             l2 -> val %= 10 ; 
             prev -> next = l2 ; 
             prev = prev -> next ; 
             l2 = l2 -> next ; 
          } 
 
          if ( carry == 1 ) 
          { 
             prev -> next = new   ListNode ( 1 ) ; 
          } 
 
          return  l ; 
 
      } 
 } ;