class   Solution   { 
 public : 
      bool   checkInclusion ( string s1 ,  string s2 )   { 
         
 
          int  j = 0 ; 
         vector < int >   v ( 26 , 0 ) ; 
          for ( auto &  ele :  s1 ) 
             v [ ele - 'a' ]   ++ ; 
 
          // unordered_map<char,int> mp2; 
         vector < int >   v2 ( 26 , 0 ) ; 
 
 
          for ( int  i = 0 ; i < s2 . size ( ) ; i ++ ) 
          { 
             v2 [ s2 [ i ] - 'a' ] ++ ; 
 
              int  len = i - j + 1 ; 
              if ( len > s1 . size ( ) ) 
              { 
                 v2 [ s2 [ j ] - 'a' ] -- ; 
                 j ++ ; 
                 len -- ; 
              } 
              if ( len == s1 . size ( ) ) 
              { 
                 int  fg = 0 ; 
                  // cout<<i<<" "<<j<<endl; 
                 for ( int  k = 0 ; k < 26 ; k ++ ) 
                 { 
                     if ( v [ k ] != v2 [ k ] ) 
                     fg = 1 ; 
                 } 
                
                 if ( fg == 0 ) 
                      return   true ; 
                
 
                  // cout<<i<<endl; 
              } 
          } 
          return   false ; 
      } 
 } ;