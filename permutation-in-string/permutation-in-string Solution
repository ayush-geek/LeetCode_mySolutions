class   Solution   { 
  public : 
 
      bool   chk ( vector < int > &  a , vector < int > &  b ) 
      { 
 
          for ( int  i = 0 ; i < 26 ; i ++ ) 
          { 
              if ( a [ i ] != b [ i ] ) 
                  return   false ; 
          } 
 
 
          return   true ; 
      } 
 
      bool   checkInclusion ( string s1 ,  string s2 )   { 
         
 
          //s2 contains permuataion of s1 
 
         vector < int >   v1 ( 26 , 0 ) ; 
         vector < int >   v2 ( 26 , 0 ) ; 
          for ( int  i = 0 ; i < s1 . size ( ) ; i ++ ) 
          { 
             v1 [ s1 [ i ] - 'a' ] ++ ; 
          } 
 
 
          //Sliding Window 
          int  j = 0 ; 
          for ( int  i = 0 ; i < s2 . size ( ) ; i ++ ) 
          { 
             v2 [ s2 [ i ] - 'a' ] ++ ; 
 
              if ( v2 [ s2 [ i ] - 'a' ] > v1 [ s2 [ i ] - 'a' ] ) 
              { 
                  while ( v2 [ s2 [ i ] - 'a' ] >  v1 [ s2 [ i ] - 'a' ] ) 
                  { 
                     v2 [ s2 [ j ] - 'a' ] -- ; 
                     j ++ ; 
                  } 
              } 
 
              //chk 
              if ( chk ( v1 , v2 ) ) 
                  return   true ; 
          } 
 
          return   false ; 
      } 
  } ;