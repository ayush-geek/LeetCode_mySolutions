/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   swapNodes ( ListNode *  head ,   int  k )   { 
         
 
          //just swapping k 
 
          int   z = k - 1 ; 
         ListNode *  tmp = head ; 
          while ( z -- ) 
          { 
             tmp = tmp -> next ; 
 
          } 
 
         ListNode *  begk = tmp ; 
 
         ListNode *  slow = head ; 
         ListNode *  fast = tmp -> next ; 
 
          while ( fast != NULL ) 
          { 
             slow = slow -> next ; 
             fast = fast -> next ; 
          } 
 
 
          //SLOW POINT to kth node from last 
 
          swap ( slow -> val , begk -> val ) ; 
 
          return  head ; 
 
      } 
 } ;