class   Solution   { 
 public : 
      int   ladderLength ( string beginWord ,  string endWord ,  vector < string > &  wordList )   { 
         unordered_set < string >   st ( wordList . begin ( ) , wordList . end ( ) ) ; 
 
         queue < pair < int , string >>  q ; 
         q . push ( { 0 , beginWord } ) ; 
 
          while ( ! q . empty ( ) ) 
          { 
              auto  nd = q . front ( ) ; 
             q . pop ( ) ; 
 
 
         string z = nd . second ; 
          int  d = nd . first ; 
              if ( z == endWord ) 
              { 
                  return  d + 1 ; 
              } 
 
 
              for ( int  i = 0 ; i < z . size ( ) ; i ++ ) 
              { 
                  char  old = z [ i ] ; 
 
                  for ( char  alp = 'a' ; alp <= 'z' ; alp ++ ) 
                  { 
                     z [ i ] = alp ; 
 
                      if ( st . find ( z ) != st . end ( ) ) 
                      { 
                         q . push ( { d + 1 , z } ) ; 
                         st . erase ( z ) ; 
                      } 
 
                  } 
                 z [ i ] = old ; 
              } 
          } 
 
          return   0 ; 
         
      } 
 } ;