class   Solution   { 
  public : 
      int   ladderLength ( string beginWord ,  string endWord ,  vector < string > &  wordList )   { 
         
         unordered_set < string >  st ; 
 
          for ( auto  ele :  wordList ) 
          { 
             st . insert ( ele ) ; 
          } 
 
         queue < pair < string , int >>  q ; 
 
         q . push ( { beginWord , 1 } ) ; 
         st . erase ( beginWord ) ; 
 
 
          while ( ! q . empty ( ) ) 
          { 
              auto  itr = q . front ( ) ; 
             q . pop ( ) ; 
 
 
 
             string tmp = itr . first ; 
              int  step = itr . second ; 
 
              if ( tmp == endWord ) 
                  return  step ; 
 
              for ( int  i = 0 ; i < tmp . size ( ) ; i ++ ) 
              {     char  org = tmp [ i ] ; 
                  for ( char  zz = 'a' ; zz <= 'z' ; zz ++ ) 
                  { 
                     tmp [ i ] = zz ; 
 
                      if ( st . find ( tmp ) != st . end ( ) ) 
                      { 
                         st . erase ( tmp ) ; 
                         q . push ( { tmp , step + 1 } ) ; 
                      } 
                     tmp [ i ] = org ; 
                  } 
              } 
          } 
          return   0 ; 
      } 
  } ;