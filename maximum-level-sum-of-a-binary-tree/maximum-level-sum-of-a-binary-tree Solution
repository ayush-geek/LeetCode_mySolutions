/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
      int   maxLevelSum ( TreeNode *  root )   { 
 
       //bfs 
          int  ans = 0 ; 
          queue < TreeNode * >  q ;    
          q . push ( root ) ; 
          long   long  mxs = LLONG_MIN ; 
          int  l = 0 ; 
           while ( ! q . empty ( ) ) 
           { 
               int  sz = q . size ( ) ; 
               long   long  sm = 0 ; 
                 l ++ ; 
               while ( sz -- ) 
               { 
                   auto  nd = q . front ( ) ; 
                  sm += ( long   long ) nd -> val ; 
                  q . pop ( ) ; 
 
                   if ( nd -> left != NULL ) 
                     q . push ( nd -> left ) ; 
                   if ( nd -> right != NULL ) 
                     q . push ( nd -> right ) ; 
               } 
             cout << l << " " << sm << endl ;  
               if ( sm > mxs ) 
               { 
                  mxs = sm ; 
                  ans = l ; 
               } 
              
 
           } 
 
           return  ans ; 
      } 
 } ;