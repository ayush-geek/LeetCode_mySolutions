class   Solution   { 
 public : 
      bool   increasingTriplet ( vector < int > &  nums )   { 
          int  n = nums . size ( ) ; 
 
      //M2 Constant Space 
 
          int  mn1 = INT_MAX ; 
          int  mn2 = INT_MAX ; 
 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( nums [ i ] < mn1 ) 
              { 
                
                 mn1 = nums [ i ] ; 
              } 
            
              else   if ( nums [ i ] > mn1  &&  nums [ i ] < mn2  ) 
                 mn2 = nums [ i ] ; 
 
              else   if ( nums [ i ] > mn2  &&  mn2 > mn1 ) 
                  return   true ; 
             
          } 
 
          return   false ; 
 
          // vector<int> pref(n,0); 
          // vector<int> suf(n,0); 
 
 
          // pref[0]=nums[0]; 
          // suf[n-1]=nums[n-1]; 
 
          // for(int i=1;i<n;i++) 
          // { 
          //     pref[i]=min(pref[i-1],nums[i-1]); 
          // } 
 
          //  for(int i=n-2;i>=1;i--) 
          // { 
          //     suf[i]=max(suf[i+1],nums[i+1]); 
          // } 
 
          // for(int i=1;i<n-1;i++) 
          // { 
          //     if(pref[i]<nums[i] && nums[i]<suf[i]) 
          //         return true; 
          // } 
 
          // return false; 
      } 
 } ;