class   Solution   { 
 public : 
      int   maxSubarraySumCircular ( vector < int > &  nums )   { 
         
 
          //max sum by kadane  
 
          int  ans1 = nums [ 0 ] ; 
          int  cs = nums [ 0 ] ; 
          for ( int  i = 1 ; i < nums . size ( ) ; i ++ ) 
          {    
             cs = max ( nums [ i ] , cs + nums [ i ] ) ; 
             ans1 = max ( ans1 , cs ) ; 
          } 
 
          //min sum 
           int  ans2 = nums [ 0 ] ; 
         cs = nums [ 0 ] ; 
          for ( int  i = 1 ; i < nums . size ( ) ; i ++ ) 
          {    
             cs = min ( nums [ i ] , cs + nums [ i ] ) ; 
             ans2 = min ( ans2 , cs ) ; 
          } 
 
          int  z = accumulate ( nums . begin ( ) , nums . end ( ) , 0 ) ; 
 
          if ( z - ans2 == 0 ) 
              return  ans1 ; 
          return   max ( ans1 , z - ans2 ) ; 
         
      } 
 } ;