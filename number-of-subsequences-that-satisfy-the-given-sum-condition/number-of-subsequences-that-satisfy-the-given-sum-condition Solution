class   Solution   { 
 public : 
      int  mod = 1e9 + 7 ; 
      int   numSubseq ( vector < int > &  nums ,   int  target )   { 
          sort ( nums . begin ( ) , nums . end ( ) ) ; 
          int  n = nums . size ( ) ; 
         vector < int >   pows ( n ,   1 ) ; 
          for   ( int  i  =   1   ;  i  <  n  ;   ++ i ) 
             pows [ i ]   =  pows [ i  -   1 ]   *   2   %  mod ; 
 
       
 
          long   long  ans = 0 ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          {    
              if ( nums [ i ] > target ) 
                  break ; 
              int  ub = lower_bound ( nums . begin ( ) , nums . end ( ) , target - nums [ i ] + 1 ) - nums . begin ( ) ; 
          //cout<<i<<" "<<ub<<endl; 
            
 
              if ( ub - 1 > i ) 
                 ans = ( ans + pows [ ub - 1 - i ] ) % mod ; 
             else   if ( ub - 1 == i ) 
             { 
                 if ( 2 * nums [ i ] <= target ) 
                 ans ++ ; 
             } 
 
 
 
          } 
          return  ans ; 
 
      } 
 } ;