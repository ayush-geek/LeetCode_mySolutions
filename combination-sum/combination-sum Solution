class   Solution   { 
 public : 
 
 	 // int mod=1e9+7; 
 	 void   solve ( int  i , vector < int > &  candidates , int  target , vector < int > &  tmp , vector < vector < int >> &  res , int &  cs ) 
      {    
         
          if ( i == candidates . size ( ) ) 
          {    
              if ( cs == target ) 
                 res . push_back ( tmp ) ; 
              return   ; 
          } 
         
         
         
          //take 
       
          if ( cs + candidates [ i ] <= target ) 
          { 
             cs += candidates [ i ] ; 
             tmp . push_back ( candidates [ i ] ) ; 
              solve ( i , candidates , target , tmp , res , cs ) ; 
             cs -= candidates [ i ] ; 
             tmp . pop_back ( ) ; 
          } 
         
          //Not_take 
           solve ( i + 1 , candidates , target , tmp , res , cs ) ; 
     
         
       
      } 
   
     vector < vector < int >>   combinationSum ( vector < int > &  candidates ,   int  target )   { 
         vector < vector < int >>  res ; 
         vector < int >  tmp ; 
          int  cs = 0 ; 
          solve ( 0 , candidates , target , tmp , res , cs ) ; 
          return  res ; 
      } 
 } ;