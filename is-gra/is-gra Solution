class   Solution   { 
 public : 
 
      bool   dfs ( int  i , vector < int > &  vis , vector < vector < int >> &  graph , int  col ) 
      { 
         
         vis [ i ] = col ; 
 
          for ( auto &  ele :  graph [ i ] ) 
          { 
              if ( vis [ ele ] == - 1 ) 
                  { 
                      if ( ! dfs ( ele , vis , graph , ! col ) ) 
                          return   false ; 
                  } 
              else   if ( vis [ ele ] == col ) 
                  return   false ; 
          } 
          return   true ; 
      } 
 
      bool   isBipartite ( vector < vector < int >> &  graph )   { 
         
 
          //dfs 
          int  n = graph . size ( ) ; 
 
         vector < int >   vis ( n , - 1 ) ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              if ( vis [ i ] == - 1 ) 
              { 
                  if (   dfs ( i , vis , graph , 0 ) == false ) 
                      return   false ; 
              } 
                
          } 
          return   true ; 
      } 
 } ;