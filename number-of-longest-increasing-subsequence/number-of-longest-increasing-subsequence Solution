class   Solution   { 
 public : 
      int   findNumberOfLIS ( vector < int > &  nums )   { 
         
          int  n = nums . size ( ) ; 
         vector < int >   ct ( n , 1 ) ; 
         vector < int >   dp ( n , 1 ) ; 
          int  mx = 1 ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          { 
              for ( int  j = 0 ; j < i ; j ++ ) 
              { 
                  if ( nums [ j ] < nums [ i ]   &&   1 + dp [ j ] > dp [ i ] ) 
                  { 
                     ct [ i ] = ct [ j ] ; 
                     dp [ i ] = 1 + dp [ j ] ; 
                  } 
                  else   if ( nums [ j ] < nums [ i ]   &&   1 + dp [ j ] == dp [ i ] ) 
                  { 
                     ct [ i ] += ct [ j ] ; 
                  } 
                 mx = max ( dp [ i ] , mx ) ; 
              } 
          } 
      // cout<<mx<<endl; 
      int  ans = 0 ; 
          for ( int  i = 0 ; i < n ; i ++ ) 
          {    
              // cout<<dp[i]<<" "<<ct[i]<<endl; 
              if ( dp [ i ] == mx ) 
                  ans += ct [ i ] ; 
          } 
          return  ans ; 
      } 
 } ;