class   Solution   { 
 public : 
 
      int   solve ( int  i , int  j , vector < vector < int >> &  dp , vector < int > &  piles ) 
      { 
          if ( i > j ) 
              return   0 ; 
         
          if ( dp [ i ] [ j ] != - 1 ) 
              return  dp [ i ] [ j ] ; 
          int  ans = 0 ; 
 
         ans = max ( piles [ i ] - solve ( i + 1 , j , dp , piles )   , piles [ j ] - solve ( i , j - 1 , dp , piles ) ) ; 
          return  dp [ i ] [ j ] = ans ; 
      } 
 
      bool   stoneGame ( vector < int > &  piles )   { 
         
          int  n = piles . size ( ) ; 
       
        vector < vector < int >>   dp ( n + 1 , vector < int >   ( n + 1 , - 1 ) ) ; 
     
          return   solve ( 0 , n - 1 , dp , piles ) ; 
      } 
 } ;