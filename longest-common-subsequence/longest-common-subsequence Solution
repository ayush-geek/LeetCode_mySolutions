class   Solution   { 
 public : 
      int   longestCommonSubsequence ( string text1 ,  string text2 )   { 
         
 
          int  n1 = text1 . size ( ) ; 
          int  n2 = text2 . size ( ) ; 
 
         vector < vector < int >>   dp ( n1 , vector < int >   ( n2 , 0 ) ) ; 
 
          for ( int  i = 0 ; i < n1 ; i ++ ) 
          { 
              for ( int  j = 0 ; j < n2 ; j ++ ) 
              { 
                  if ( text1 [ i ] == text2 [ j ] ) 
                  { 
                     dp [ i ] [ j ] += 1 ; 
 
                      if ( i - 1 >= 0   &&  j - 1 >= 0 ) 
                         dp [ i ] [ j ] += dp [ i - 1 ] [ j - 1 ] ; 
                  } 
                  else 
                      { 
                          if ( i > 0 ) 
                             dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j ] ) ; 
                         
                          if ( j > 0 ) 
                             dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i ] [ j - 1 ] ) ; 
                      } 
              } 
          } 
 
          return  dp [ n1 - 1 ] [ n2 - 1 ] ; 
      } 
 } ;