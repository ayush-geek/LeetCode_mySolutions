class   MyStack   { 
 public : 
     
       queue < int >  q ; 
         queue < int >  q1 ; 
      int  size ; 
      MyStack ( )   { 
       size = 0 ; 
      } 
     
      void   push ( int  x )   { 
         q . push ( x ) ; 
          //q1.push(x); 
         size ++ ; 
      } 
     
      int   pop ( )   { 
         size -- ; 
          if ( q . size ( ) == 1 ) 
          { 
              int  z1 = q . front ( ) ; 
             q . pop ( ) ; 
              return  z1 ; 
          } 
         
        while ( q . size ( ) != 1 ) 
         { 
             int  z = q . front ( ) ; 
            q . pop ( ) ; 
            q1 . push ( z ) ; 
         } 
         
         
          int  temp = q . front ( ) ; 
         
           while ( ! q1 . empty ( ) ) 
         { 
             int  z = q1 . front ( ) ; 
            q1 . pop ( ) ; 
            q . push ( z ) ; 
         } 
          return  temp ; 
      } 
     
      int   top ( )   { 
         while ( q . size ( ) != 1 ) 
         { 
             int  z = q . front ( ) ; 
            q . pop ( ) ; 
            q1 . push ( z ) ; 
         } 
         
         
          int  temp = q . front ( ) ; 
         q1 . push ( temp ) ; 
         
           while ( ! q1 . empty ( ) ) 
         { 
             int  z = q1 . front ( ) ; 
            q1 . pop ( ) ; 
            q . push ( z ) ; 
         } 
         
         
         return  temp ;  
         
      } 
     
      bool   empty ( )   { 
         if ( size == 0 ) 
             return   true ; 
         
         
          return   false ; 
      } 
 } ; 
 
 /**
  * Your MyStack object will be instantiated and called as such:
  * MyStack* obj = new MyStack();
  * obj->push(x);
  * int param_2 = obj->pop();
  * int param_3 = obj->top();
  * bool param_4 = obj->empty();
  */