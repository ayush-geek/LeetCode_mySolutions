class   Solution   { 
 public : 
 
      // int solve(int i,int j,string& s,string& t,vector<vector<int>>& dp) 
      // { 
      //     if(j<0) 
      //         return 1; 
      //     if(i<0) 
      //         return 0; 
      //     if(dp[i][j]!=-1) 
      //         return dp[i][j]; 
 
      //     int ans=0; 
      //     if(s[i]==t[j]) 
      //         ans+=solve(i-1,j-1,s,t,dp); 
         
        
      //     ans+=solve(i-1,j,s,t,dp); 
             
         
      //        return dp[i][j]=ans; 
      // } 
 
      int   numDistinct ( string s ,  string t )   { 
         
          int  n1 = s . size ( ) ; 
          int  n2 = t . size ( ) ; 
 
         vector < vector < double >>   dp ( n1 + 1 , vector < double >   ( n2 + 1 , 0 ) ) ; 
 
          for ( int  i = 0 ; i <= n1 ; i ++ ) 
          { 
             dp [ i ] [ 0 ] = 1 ; 
          } 
 
          for ( int  i = 1 ; i <= n1 ; i ++ ) 
          { 
              for ( int  j = 1 ; j <= n2 ; j ++ ) 
              {     double  ans = 0 ; 
                  if ( s [ i - 1 ] == t [ j - 1 ] ) 
                     ans += dp [ i - 1 ] [ j - 1 ] ; 
                 
                 ans += dp [ i - 1 ] [ j ] ; 
 
                 dp [ i ] [ j ] = ans ; 
              } 
          } 
 
          return  dp [ n1 ] [ n2 ] ; 
      } 
 } ;