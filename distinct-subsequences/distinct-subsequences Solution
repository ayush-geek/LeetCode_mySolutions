class   Solution   { 
 public : 
 
 int   solve ( int  i , int  j , string &  s , string &  t ,  vector < vector < int >> &  dp ) 
 { 
     
    //cout<<i<<" "<<j<<endl; 
      if ( j < 0 ) 
          return   1 ; 
      if ( i < 0 ) 
          return   0 ; 
     
      if ( dp [ i ] [ j ] != - 1 ) 
          return  dp [ i ] [ j ] ; 
     
     
      if ( s [ i ] == t [ j ] ) 
          return  dp [ i ] [ j ] = solve ( i - 1 , j - 1 , s , t , dp ) + solve ( i - 1 , j , s , t , dp ) ; 
      else 
          return  dp [ i ] [ j ] = solve ( i - 1 , j , s , t , dp ) ; 
 } 
 
 
     
     
     
     
      int   numDistinct ( string s ,  string t )   { 
         
          int  ls = s . size ( ) ; 
          int  lt = t . size ( ) ; 
          vector < vector < int >>   dp ( ls , vector < int >   ( lt , - 1 ) ) ; 
     
     
      return   solve ( ls - 1 , lt - 1 , s , t , dp ) ; 
      } 
 } ;