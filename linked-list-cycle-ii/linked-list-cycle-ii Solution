/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode(int x) : val(x), next(NULL) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode  * detectCycle ( ListNode  * head )   { 
         
 
         ListNode *  slow = head ; 
         ListNode *  fast = head ; 
          int  fg = 0 ; 
          while ( fast != NULL   &&  fast -> next != NULL ) 
          { 
             slow = slow -> next ; 
             fast = fast -> next -> next ; 
 
              if ( slow == fast ) 
              { 
                 fg = 1 ; 
                  break ; 
              } 
          } 
 
          if ( fg == 0 ) 
              return   nullptr ; 
         fast = head ; 
 
          while ( slow != fast ) 
          { 
             fast = fast -> next ; 
             slow = slow -> next ; 
          } 
 
          return  slow ; 
      } 
 } ;