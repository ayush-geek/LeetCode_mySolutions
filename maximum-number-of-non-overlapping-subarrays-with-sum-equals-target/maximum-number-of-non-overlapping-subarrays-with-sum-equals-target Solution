class   Solution   { 
 public : 
     
  
   
   
   int   maxNonOverlapping ( vector < int > &  nums ,   int  target )   { 
  
     
      //prefix sum 
 		 //  1 2 3 3 2 1 -5 -2 2 4     target = 11 
      //  0 1 3 6 9 11 12 7 5 7 11 
      //  0 1 3 6 9 11 1 - 5 7 11 
     
      // vector<int>prefix; 
      // prefix.push_back(0); 
      // for(int i=0;i<nums.size();i++) 
      // { 
      // 	prefix.push_back(nums[i]+prefix.back()); 
      // } 
     
     //     nums = [1,1,1,1,1], target = 2 
     // o/p -> 2 
     // traversed 0 1 2 
  		unordered_set < int > traversed ; 
     traversed . insert ( 0 ) ; 
      //to traverse the array 
      int  ans = 0 ; 
      int  prev = 0 ; 
      for ( int  i = 0 ; i < nums . size ( ) ; i ++ ) 
      { 
     		 if ( traversed . find ( prev + nums [ i ] - target ) != traversed . end ( ) ) 
          { 
         	ans ++ ; 
           traversed . clear ( ) ; 
           traversed . insert ( 0 ) ; 
           prev = 0 ; 
            continue ; 
          } 
          else 
         	traversed . insert ( prev + nums [ i ] ) ; 
         prev = prev + nums [ i ] ; 
 
   
      } 
      return  ans ; 
     
  
   } 
  
 } ;