class   Solution   { 
 public : 
 
      void   dfs ( int  i , int  j , vector < vector < int >> &  image , int  pc , int  nc ) 
      {    
          int  n = image . size ( ) ; 
          int  m = image [ 0 ] . size ( ) ; 
          if ( i < 0   ||  j < 0   ||  i >= n  ||  j >= m  || image [ i ] [ j ] != pc ) 
              return   ; 
          image [ i ] [ j ] = nc ; 
          dfs ( i , j + 1 , image , pc , nc ) ; 
          dfs ( i , j - 1 , image , pc , nc ) ; 
          dfs ( i + 1 , j , image , pc , nc ) ; 
          dfs ( i - 1 , j , image , pc , nc ) ; 
 
        
      } 
 
     vector < vector < int >>   floodFill ( vector < vector < int >> &  image ,   int  sr ,   int  sc ,   int  color )   { 
          if ( image [ sr ] [ sc ] == color ) 
              return  image ; 
 
          dfs ( sr , sc , image , image [ sr ] [ sc ] , color ) ; 
 
          return  image ; 
 
      } 
 } ;