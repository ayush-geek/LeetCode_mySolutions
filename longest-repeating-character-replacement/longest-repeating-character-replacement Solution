class   Solution   { 
 public : 
 
      int   mxfreq ( unordered_map < char , int > &  mp ) 
      { 
          int  mx = 0 ; 
          for ( auto  ele : mp ) 
          { 
              if ( ele . second >= mx ) 
                 mx = max ( mx , ele . second ) ; 
          } 
          return  mx ; 
      } 
      int   characterReplacement ( string s ,   int  k )   { 
         
          //Sliding Window 
 
          unordered_map < char , int >  mp ; 
          // unordered_set<int> st; 
          int  i = 0 ; 
          int  j = 0 ;         
          int  len = 0 ; 
          int  ans = 0 ; 
 
          for ( int  i = 0 ; i < s . size ( ) ; i ++ ) 
          {    
              mp [ s [ i ] ] ++ ; 
              int  len = i - j + 1 ; 
 
              if ( len - mxfreq ( mp ) > k ) 
              { 
                  while ( len - mxfreq ( mp ) > k ) 
                  { 
                     mp [ s [ j ] ] -- ; 
                     j ++ ; 
 
                     len -- ; 
                  } 
                 
 
              } 
         
 
            ans = max ( ans , len ) ; 
          } 
 
          return  ans ; 
      } 
 } ;