/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     vector < vector < int >>  ans ; 
     
     
      void   solve ( TreeNode *  root , int  tgt , vector < int > &  lvl ) 
      { 
          if ( root == NULL ) 
              return   ; 
          if ( root -> left == NULL   &&  root -> right == NULL ) 
          { 
                 lvl . push_back ( root -> val ) ; 
                 
                  int  sm = 0 ; 
                 
                  for ( int  i = 0 ; i < lvl . size ( ) ; i ++ ) 
                     sm += lvl [ i ] ; 
             
              //cout<<sm<<endl; 
                  if ( sm == tgt ) 
                     ans . push_back ( lvl ) ; 
                 
             
               //tgt+=lvl.back(); 
             lvl . pop_back ( ) ; 
             return   ; 
          } 
         
         
         
         lvl . push_back ( root -> val ) ; 
         
       
         
          solve ( root -> left , tgt , lvl ) ; 
         
          solve ( root -> right , tgt , lvl ) ; 
         
         lvl . pop_back ( ) ; 
      } 
     
     
     vector < vector < int >>   pathSum ( TreeNode *  root ,   int  tgt )   { 
         
         
         vector < int >  lvl ; 
          solve ( root , tgt , lvl ) ; 
         
          return  ans ; 
     
      } 
 } ;