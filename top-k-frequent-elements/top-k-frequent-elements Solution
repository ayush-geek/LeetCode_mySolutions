class   Solution   { 
 public : 
     vector < int >   topKFrequent ( vector < int > &  nums ,   int  k )   { 
 
       //klog k  
       //pq 
 
    vector < int >  res ; 
 
     unordered_map < int , int >  mp ; 
      for ( int  i = 0 ; i < nums . size ( ) ; i ++ ) 
      { 
         mp [ nums [ i ] ] ++ ; 
         
      }    
     priority_queue < pair < int , int >>  pq ; 
      for ( auto &  ele :  mp ) 
          { 
             pq . push ( { - 1 * mp [ ele . first ] , ele . first } ) ; 
              if ( pq . size ( ) > k ) 
                 pq . pop ( ) ; 
          } 
 
      while ( ! pq . empty ( ) ) 
      { 
         res . push_back ( pq . top ( ) . second ) ; 
         pq . pop ( ) ; 
      } 
      return  res ; 
 
      } 
 } ;