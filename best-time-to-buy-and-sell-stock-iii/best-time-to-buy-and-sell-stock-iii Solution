class   Solution   { 
 public : 
      int   maxProfit ( vector < int > &  prices )   { 
 
          //state 
 
          //index,b/s, k trans 
          int  n = prices . size ( ) ; 
          int  k = 2 ; 
         vector < vector < vector < int >> >   dp ( n + 1 , vector < vector < int >>   ( 2 , vector < int >   ( k + 1 , 0 ) ) ) ;  
 
          for ( int  i = n - 1 ; i >= 0 ; i -- ) 
          { 
              for ( int  l = 0 ; l < k ; l ++ ) 
              { 
                 dp [ i ] [ 0 ] [ l ] = max ( - prices [ i ]   + dp [ i + 1 ] [ 1 ] [ l ]   , dp [ i + 1 ] [ 0 ] [ l ] ) ; 
                 dp [ i ] [ 1 ] [ l ] = max ( prices [ i ]   +  dp [ i + 1 ] [ 0 ] [ l + 1 ]   , dp [ i + 1 ] [ 1 ] [ l ] ) ; 
              } 
          }   
 
          return   ( dp [ 0 ] [ 0 ] [ 0 ] ) ; 
      } 
 } ;