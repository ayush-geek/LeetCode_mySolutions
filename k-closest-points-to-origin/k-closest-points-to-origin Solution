class   Solution   { 
 public : 
     vector < vector < int >>   kClosest ( vector < vector < int >> &  points ,   int  k )   { 
         priority_queue < pair < long   long , int >>  pq ; 
          for ( int  i = 0 ; i < points . size ( ) ; i ++ ) 
          { 
              long   long  d = ( long   long )   pow ( points [ i ] [ 0 ] , 2 )   +   ( long   long ) pow ( points [ i ] [ 1 ] , 2 ) ; 
 
             pq . push ( { d , i } ) ; 
 
              if ( pq . size ( ) > k ) 
                 pq . pop ( ) ; 
 
 
          } 
 
         vector < vector < int >>  res ; 
 
          while ( ! pq . empty ( ) ) 
          {     int  z = pq . top ( ) . second ; 
 
             res . push_back ( points [ z ] ) ; 
             pq . pop ( ) ; 
          } 
 
          return  res ; 
      } 
 } ;