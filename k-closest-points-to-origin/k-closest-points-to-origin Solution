class   Solution   { 
 public : 
 
    long   long   solve ( int  a  , int  b ) 
    { 
        return   ( 1ll * a * a  +   1ll * b * b ) ; 
    } 
 
     
 
     vector < vector < int >>   kClosest ( vector < vector < int >> &  points ,   int  k )   { 
         
         vector < vector < int >>  res ; 
         priority_queue < pair < long   long , vector < int >   >>  pq ; 
          for ( int  i = 0 ; i < points . size ( ) ; i ++ ) 
          { 
              int  a = points [ i ] [ 0 ] ; 
              int  b = points [ i ] [ 1 ] ; 
 
 
             pq . push ( { solve ( a , b ) , points [ i ] } ) ; 
 
              if ( pq . size ( ) > k )  
                 pq . pop ( ) ; 
          } 
 
          while ( ! pq . empty ( ) ) 
          { 
             res . push_back ( pq . top ( ) . second ) ; 
             pq . pop ( ) ; 
          } 
 
          return  res ; 
      } 
 } ;