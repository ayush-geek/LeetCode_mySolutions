class   Solution   { 
 public : 
     vector < vector < int >>   kClosest ( vector < vector < int >> &  points ,   int  k )   { 
     
     vector < vector < int >>  res ; 
      priority_queue < pair < int , int >>  pq ; 
      int  i = 0 ; 
       for ( auto   & ele :  points ) 
       { 
           long   long  d =   pow ( ele [ 0 ] , 2 ) + pow ( ele [ 1 ] , 2 ) ; 
 
          pq . push ( { d , i } ) ; 
           if ( pq . size ( ) > k ) 
             pq . pop ( ) ; 
         i ++ ; 
       } 
 
       while ( ! pq . empty ( ) ) 
       { 
           int  ind = pq . top ( ) . second ; 
          res . push_back ( points [ ind ] ) ; 
          pq . pop ( ) ; 
       } 
 
          return  res ; 
      } 
 } ;