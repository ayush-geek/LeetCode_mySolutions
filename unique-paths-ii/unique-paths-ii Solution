class   Solution   { 
 public : 
      int   uniquePathsWithObstacles ( vector < vector < int >> &  grid )   { 
          int  m = grid . size ( ) ; 
          int  n = grid [ 0 ] . size ( ) ; 
         vector < vector < long   long >>   dp ( m + 1 , vector < long   long > ( n + 1 , 0 ) ) ; 
     
      for ( int  i = m - 1 ; i >= 0 ; i -- ) { 
          for ( int  j = n - 1 ; j >= 0 ; j -- ) { 
 			 if ( grid [ i ] [ j ] == 1 )     //obstacle 
                  continue ; 
              if ( i == m - 1   &&  j == n - 1 )   {    //starting case 
             dp [ i ] [ j ] = 1 ; 
              // continue; 
              } 
              // if(j+1<n)  
                 dp [ i ] [ j ] += dp [ i ] [ j + 1 ] ; 
              // if(i+1<m)  
                 dp [ i ] [ j ] += dp [ i + 1 ] [ j ] ; 
          } 
 		
      } 
 	
      return  dp [ 0 ] [ 0 ] ; 
     
      } 
 } ;