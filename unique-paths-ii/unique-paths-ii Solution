class   Solution   { 
 public : 
      int   uniquePathsWithObstacles ( vector < vector < int >> &  grid )   { 
          int  m = grid . size ( ) ; 
          int  n = grid [ 0 ] . size ( ) ; 
          if ( grid [ 0 ] [ 0 ] == 1   ||  grid [ m - 1 ] [ n - 1 ] == 1 ) 
              return   0 ; 
 
         vector < vector < int >>   dp ( m + 1 , vector < int >   ( n + 1 , 0 ) ) ; 
 
 
          for ( int  i = 1 ; i <= m ; i ++ ) 
          { 
              for ( int  j = 1 ; j <= n ; j ++ ) 
              {     if ( grid [ i - 1 ] [ j - 1 ] == 1 ) 
                      continue ; 
                  if ( i == 1   &&  j == 1 ) 
                     dp [ i ] [ j ] = 1 ; 
                  else 
                     dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] ; 
              } 
          } 
          return  dp [ m ] [ n ] ; 
 
      } 
 } ;