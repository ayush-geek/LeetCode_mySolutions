/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
      int   widthOfBinaryTree ( TreeNode *  root )   { 
          if ( root == NULL ) 
              return   0 ; 
          unsigned   long   long  ans = 0 ; 
 
         queue < pair < TreeNode * , unsigned   long   long >>  q ; 
         q . push ( { root , 0 } ) ; 
 
          while ( ! q . empty ( ) ) 
          { 
              int  sz = q . size ( ) ; 
              // long long fpos=LLONG_MAX; 
          
              auto   s = q . front ( ) . second ; 
              auto  lpos = s ; 
              while ( sz -- ) 
              { 
                  auto  nd = q . front ( ) ; 
                 q . pop ( ) ; 
 
                 TreeNode *  node = nd . first ; 
                  auto  ind = nd . second ; 
                  ans = max ( ans , ind - s + 1 ) ; 
               // fpos=min(fpos,ind); 
               lpos = max ( lpos , ind ) ; 
 
 
                  if ( node -> left != NULL ) 
                      { 
                         q . push ( { node -> left , 2 * ind + 1 } ) ; 
                       
                      } 
                  if ( node -> right != NULL ) 
                  { 
                      q . push ( { node -> right , 2l * ind + 2 } ) ; 
                  } 
              } 
            
          }  
          return  ans ; 
      } 
 } ;