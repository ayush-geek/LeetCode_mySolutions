class   Solution   { 
 public : 
     string  simplifyPath ( string path )   { 
         
         stringstream  ss ( path ) ; 
         string word ; 
         stack < string >  st ; 
          while ( ! ss . eof ( ) ) 
          { 
              getline ( ss , word , '/' ) ; 
 
              if ( word . size ( ) > 0 ) 
              {     //cout<<word<<endl; 
                  if ( word == ".." ) 
                    {   if ( ! st . empty ( ) ) 
                         st . pop ( ) ; } 
                  else   if ( word == "." ) 
                      continue ; 
                   else 
                     st . push ( word ) ; 
              } 
 
            
          } 
 
         string res = "" ; 
          while ( ! st . empty ( ) ) 
          { 
             
             string z = st . top ( ) ; 
              reverse ( z . begin ( ) , z . end ( ) ) ; 
             res += z ; 
             res += "/" ; 
              // cout<<res<<endl; 
             st . pop ( ) ; 
          }    
              if ( res . size ( ) == 0 ) 
             res += "/" ; 
              //  cout<<res<<endl; 
 
          reverse ( res . begin ( ) , res . end ( ) ) ; 
              // cout<<res<<endl; 
 
          return  res ; 
 
      } 
 } ;