class   Solution   { 
 public : 
     string  simplifyPath ( string path )   { 
         
 
        istringstream  ss ( path ) ; 
 
        string token ; 
        stack < string >  st ; 
         while ( getline ( ss ,  token ,   '/' ) )   { 
             
              if ( token == ".."   ) 
              { 
                  if ( ! st . empty ( ) ) 
                     st . pop ( ) ; 
                 
              } 
               
              else   if ( token == "." ) 
                  continue ; 
              else    if ( token . size ( ) > 0 ) 
                 st . push ( token ) ; 
                 
 
 
          } 
 
         
      
         
             
         string tmp ; 
          while ( ! st . empty ( ) ) 
          { 
             tmp += st . top ( ) ; 
             tmp += "/" ; 
             st . pop ( ) ; 
          } 
 
          if ( tmp . size ( ) == 0 ) 
             tmp = "/" ; 
 
          reverse ( tmp . begin ( ) , tmp . end ( ) ) ; 
          int  j = 0 ; 
          for ( int  i = 0 ; i < tmp . size ( ) ; i ++ ) 
          {    
              if ( tmp [ i ] == '/' ) 
                  {    
                      if ( i != 0 ) 
                      reverse ( tmp . begin ( ) + j + 1 , tmp . begin ( ) + i ) ; 
                     j = i ; 
                  } 
 
 
          } 
          reverse ( tmp . begin ( ) + j + 1 , tmp . end ( ) ) ; 
     
          return  tmp ; 
 
 
      } 
 } ;