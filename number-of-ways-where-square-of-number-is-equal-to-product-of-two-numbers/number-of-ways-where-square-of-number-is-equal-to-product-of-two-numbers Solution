class   Solution   { 
 public : 
      int   numTriplets ( vector < int > &  nums1 ,  vector < int > &  nums2 )   { 
         unordered_map < long   long , int >  mp1 ; 
         unordered_map < long   long , int >  mp2 ; 
 
          int  ans = 0 ; 
         
          for ( int  i = 0 ; i < nums1 . size ( ) ; i ++ ) 
          { 
              for ( int  j = i + 1 ; j < nums1 . size ( ) ; j ++ ) 
              { 
                 mp1 [ ( long   long ) nums1 [ i ] * 1ll * nums1 [ j ] ] ++ ; 
              } 
          } 
         
         
           for ( int  i = 0 ; i < nums2 . size ( ) ; i ++ ) 
          { 
              for ( int  j = i + 1 ; j < nums2 . size ( ) ; j ++ ) 
              { 
                 mp2 [ 1ll * nums2 [ i ] * 1ll * nums2 [ j ] ] ++ ; 
              } 
          } 
         
          for ( int  i = 0 ; i < nums1 . size ( ) ; i ++ ) 
          { 
             ans += mp2 [ 1ll * nums1 [ i ] * 1ll * nums1 [ i ] ] ; 
          } 
         
           for ( int  i = 0 ; i < nums2 . size ( ) ; i ++ ) 
          { 
             ans += mp1 [ 1ll * nums2 [ i ] * 1ll * nums2 [ i ] ] ; 
          } 
         
          return  ans ; 
      } 
 } ;