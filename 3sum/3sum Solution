class   Solution   { 
 public : 
     vector < vector < int >>   threeSum ( vector < int > &  nums )   { 
       //n2 
      vector < vector < int >>  res ; 
      int  n = nums . size ( ) ; 
      sort ( nums . begin ( ) , nums . end ( ) ) ; 
      for ( int  i = 0 ; i < nums . size ( ) ; i ++ ) 
      { 
          if ( i != 0   &&  nums [ i ] == nums [ i - 1 ] ) 
              continue ; 
         
          int  l = i + 1 ; 
          int  h = n - 1 ; 
 
          while ( l < h ) 
          { 
              if ( nums [ l ] + nums [ h ] + nums [ i ] == 0 ) 
              { 
                 res . push_back ( { nums [ i ] , nums [ l ] , nums [ h ] } ) ; 
 
                 l ++ ; 
                 h -- ; 
                  while ( l < h  &&  nums [ l ] == nums [ l - 1 ] ) 
                     l ++ ; 
                   while ( l < h  &&  nums [ h ] == nums [ h + 1 ] ) 
                     h -- ; 
              } 
              else   if ( nums [ l ] + nums [ h ] + nums [ i ] < 0 ) 
                  { 
                     l ++ ; 
 
                  } 
              else 
                 h -- ; 
          } 
      } 
          return  res ; 
 
      } 
 } ;