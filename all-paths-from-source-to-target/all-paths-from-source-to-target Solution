class   Solution   { 
 public : 
 
     vector < vector < int >>  res ; 
 
      void   solve ( int  i , vector < vector < int >> &  graph , vector < int > &  tmp ) 
      { 
            tmp . push_back ( i ) ; 
              if ( i == graph . size ( ) - 1 ) 
                  { 
                  
                     res . push_back ( tmp ) ; 
                     tmp . pop_back ( ) ; 
                      return   ; 
                  } 
 
              for ( auto  ele :  graph [ i ] ) 
              { 
                  solve ( ele , graph , tmp ) ; 
              } 
         
         tmp . pop_back ( ) ; 
      } 
 
     vector < vector < int >>   allPathsSourceTarget ( vector < vector < int >> &  graph )   { 
         
          //Bcaktrack 
 
         vector < int >  tmp ; 
          solve ( 0 , graph , tmp ) ; 
 
 
 
          return  res ; 
      } 
 } ;